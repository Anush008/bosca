//
// Copyright 2024 Sowers, LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: bosca/content/permissions.proto

package content

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PermissionRelation int32

const (
	PermissionRelation_viewers         PermissionRelation = 0
	PermissionRelation_discoverers     PermissionRelation = 1
	PermissionRelation_editors         PermissionRelation = 2
	PermissionRelation_managers        PermissionRelation = 3
	PermissionRelation_serviceaccounts PermissionRelation = 4
	PermissionRelation_owners          PermissionRelation = 5
)

// Enum value maps for PermissionRelation.
var (
	PermissionRelation_name = map[int32]string{
		0: "viewers",
		1: "discoverers",
		2: "editors",
		3: "managers",
		4: "serviceaccounts",
		5: "owners",
	}
	PermissionRelation_value = map[string]int32{
		"viewers":         0,
		"discoverers":     1,
		"editors":         2,
		"managers":        3,
		"serviceaccounts": 4,
		"owners":          5,
	}
)

func (x PermissionRelation) Enum() *PermissionRelation {
	p := new(PermissionRelation)
	*p = x
	return p
}

func (x PermissionRelation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PermissionRelation) Descriptor() protoreflect.EnumDescriptor {
	return file_bosca_content_permissions_proto_enumTypes[0].Descriptor()
}

func (PermissionRelation) Type() protoreflect.EnumType {
	return &file_bosca_content_permissions_proto_enumTypes[0]
}

func (x PermissionRelation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PermissionRelation.Descriptor instead.
func (PermissionRelation) EnumDescriptor() ([]byte, []int) {
	return file_bosca_content_permissions_proto_rawDescGZIP(), []int{0}
}

type PermissionAction int32

const (
	PermissionAction_view    PermissionAction = 0
	PermissionAction_list    PermissionAction = 2
	PermissionAction_edit    PermissionAction = 3
	PermissionAction_manage  PermissionAction = 4
	PermissionAction_service PermissionAction = 5
	PermissionAction_delete  PermissionAction = 6
)

// Enum value maps for PermissionAction.
var (
	PermissionAction_name = map[int32]string{
		0: "view",
		2: "list",
		3: "edit",
		4: "manage",
		5: "service",
		6: "delete",
	}
	PermissionAction_value = map[string]int32{
		"view":    0,
		"list":    2,
		"edit":    3,
		"manage":  4,
		"service": 5,
		"delete":  6,
	}
)

func (x PermissionAction) Enum() *PermissionAction {
	p := new(PermissionAction)
	*p = x
	return p
}

func (x PermissionAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PermissionAction) Descriptor() protoreflect.EnumDescriptor {
	return file_bosca_content_permissions_proto_enumTypes[1].Descriptor()
}

func (PermissionAction) Type() protoreflect.EnumType {
	return &file_bosca_content_permissions_proto_enumTypes[1]
}

func (x PermissionAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PermissionAction.Descriptor instead.
func (PermissionAction) EnumDescriptor() ([]byte, []int) {
	return file_bosca_content_permissions_proto_rawDescGZIP(), []int{1}
}

type PermissionObjectType int32

const (
	PermissionObjectType_unknown_object_type  PermissionObjectType = 0
	PermissionObjectType_collection_type      PermissionObjectType = 1
	PermissionObjectType_metadata_type        PermissionObjectType = 2
	PermissionObjectType_system_resource_type PermissionObjectType = 3
	PermissionObjectType_workflow_type        PermissionObjectType = 4
	PermissionObjectType_workflow_state_type  PermissionObjectType = 5
)

// Enum value maps for PermissionObjectType.
var (
	PermissionObjectType_name = map[int32]string{
		0: "unknown_object_type",
		1: "collection_type",
		2: "metadata_type",
		3: "system_resource_type",
		4: "workflow_type",
		5: "workflow_state_type",
	}
	PermissionObjectType_value = map[string]int32{
		"unknown_object_type":  0,
		"collection_type":      1,
		"metadata_type":        2,
		"system_resource_type": 3,
		"workflow_type":        4,
		"workflow_state_type":  5,
	}
)

func (x PermissionObjectType) Enum() *PermissionObjectType {
	p := new(PermissionObjectType)
	*p = x
	return p
}

func (x PermissionObjectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PermissionObjectType) Descriptor() protoreflect.EnumDescriptor {
	return file_bosca_content_permissions_proto_enumTypes[2].Descriptor()
}

func (PermissionObjectType) Type() protoreflect.EnumType {
	return &file_bosca_content_permissions_proto_enumTypes[2]
}

func (x PermissionObjectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PermissionObjectType.Descriptor instead.
func (PermissionObjectType) EnumDescriptor() ([]byte, []int) {
	return file_bosca_content_permissions_proto_rawDescGZIP(), []int{2}
}

type PermissionSubjectType int32

const (
	PermissionSubjectType_unknown_subject_type PermissionSubjectType = 0
	PermissionSubjectType_user                 PermissionSubjectType = 1
	PermissionSubjectType_group                PermissionSubjectType = 2
	PermissionSubjectType_service_account      PermissionSubjectType = 3
)

// Enum value maps for PermissionSubjectType.
var (
	PermissionSubjectType_name = map[int32]string{
		0: "unknown_subject_type",
		1: "user",
		2: "group",
		3: "service_account",
	}
	PermissionSubjectType_value = map[string]int32{
		"unknown_subject_type": 0,
		"user":                 1,
		"group":                2,
		"service_account":      3,
	}
)

func (x PermissionSubjectType) Enum() *PermissionSubjectType {
	p := new(PermissionSubjectType)
	*p = x
	return p
}

func (x PermissionSubjectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PermissionSubjectType) Descriptor() protoreflect.EnumDescriptor {
	return file_bosca_content_permissions_proto_enumTypes[3].Descriptor()
}

func (PermissionSubjectType) Type() protoreflect.EnumType {
	return &file_bosca_content_permissions_proto_enumTypes[3]
}

func (x PermissionSubjectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PermissionSubjectType.Descriptor instead.
func (PermissionSubjectType) EnumDescriptor() ([]byte, []int) {
	return file_bosca_content_permissions_proto_rawDescGZIP(), []int{3}
}

type PermissionCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Object      string                `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	ObjectType  PermissionObjectType  `protobuf:"varint,2,opt,name=object_type,json=objectType,proto3,enum=bosca.content.PermissionObjectType" json:"object_type,omitempty"`
	Subject     string                `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`
	SubjectType PermissionSubjectType `protobuf:"varint,4,opt,name=subject_type,json=subjectType,proto3,enum=bosca.content.PermissionSubjectType" json:"subject_type,omitempty"`
	Action      PermissionAction      `protobuf:"varint,5,opt,name=action,proto3,enum=bosca.content.PermissionAction" json:"action,omitempty"`
}

func (x *PermissionCheckRequest) Reset() {
	*x = PermissionCheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosca_content_permissions_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionCheckRequest) ProtoMessage() {}

func (x *PermissionCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bosca_content_permissions_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionCheckRequest.ProtoReflect.Descriptor instead.
func (*PermissionCheckRequest) Descriptor() ([]byte, []int) {
	return file_bosca_content_permissions_proto_rawDescGZIP(), []int{0}
}

func (x *PermissionCheckRequest) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

func (x *PermissionCheckRequest) GetObjectType() PermissionObjectType {
	if x != nil {
		return x.ObjectType
	}
	return PermissionObjectType_unknown_object_type
}

func (x *PermissionCheckRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *PermissionCheckRequest) GetSubjectType() PermissionSubjectType {
	if x != nil {
		return x.SubjectType
	}
	return PermissionSubjectType_unknown_subject_type
}

func (x *PermissionCheckRequest) GetAction() PermissionAction {
	if x != nil {
		return x.Action
	}
	return PermissionAction_view
}

type PermissionCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Allowed bool `protobuf:"varint,1,opt,name=allowed,proto3" json:"allowed,omitempty"`
}

func (x *PermissionCheckResponse) Reset() {
	*x = PermissionCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosca_content_permissions_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionCheckResponse) ProtoMessage() {}

func (x *PermissionCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bosca_content_permissions_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionCheckResponse.ProtoReflect.Descriptor instead.
func (*PermissionCheckResponse) Descriptor() ([]byte, []int) {
	return file_bosca_content_permissions_proto_rawDescGZIP(), []int{1}
}

func (x *PermissionCheckResponse) GetAllowed() bool {
	if x != nil {
		return x.Allowed
	}
	return false
}

type Permissions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Permissions []*Permission `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *Permissions) Reset() {
	*x = Permissions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosca_content_permissions_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Permissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permissions) ProtoMessage() {}

func (x *Permissions) ProtoReflect() protoreflect.Message {
	mi := &file_bosca_content_permissions_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permissions.ProtoReflect.Descriptor instead.
func (*Permissions) Descriptor() ([]byte, []int) {
	return file_bosca_content_permissions_proto_rawDescGZIP(), []int{2}
}

func (x *Permissions) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Permissions) GetPermissions() []*Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type Permission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Subject     string                `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	SubjectType PermissionSubjectType `protobuf:"varint,3,opt,name=subject_type,json=subjectType,proto3,enum=bosca.content.PermissionSubjectType" json:"subject_type,omitempty"`
	Relation    PermissionRelation    `protobuf:"varint,5,opt,name=relation,proto3,enum=bosca.content.PermissionRelation" json:"relation,omitempty"`
}

func (x *Permission) Reset() {
	*x = Permission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosca_content_permissions_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Permission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permission) ProtoMessage() {}

func (x *Permission) ProtoReflect() protoreflect.Message {
	mi := &file_bosca_content_permissions_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permission.ProtoReflect.Descriptor instead.
func (*Permission) Descriptor() ([]byte, []int) {
	return file_bosca_content_permissions_proto_rawDescGZIP(), []int{3}
}

func (x *Permission) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Permission) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Permission) GetSubjectType() PermissionSubjectType {
	if x != nil {
		return x.SubjectType
	}
	return PermissionSubjectType_unknown_subject_type
}

func (x *Permission) GetRelation() PermissionRelation {
	if x != nil {
		return x.Relation
	}
	return PermissionRelation_viewers
}

var File_bosca_content_permissions_proto protoreflect.FileDescriptor

var file_bosca_content_permissions_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2f,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0d, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x22, 0x92, 0x02, 0x0a, 0x16, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x44, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x62, 0x6f, 0x73, 0x63, 0x61,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x47, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x62, 0x6f, 0x73, 0x63,
	0x61, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x62,
	0x6f, 0x73, 0x63, 0x61, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x33, 0x0a, 0x17, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x22, 0x5a, 0x0a, 0x0b, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xbe, 0x01, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x47, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x62, 0x6f, 0x73,
	0x63, 0x61, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x6e, 0x0a, 0x12, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a,
	0x07, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x72, 0x73, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x65,
	0x64, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x73, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x73, 0x10, 0x05, 0x2a, 0x55, 0x0a, 0x10, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x76,
	0x69, 0x65, 0x77, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x10, 0x02, 0x12,
	0x08, 0x0a, 0x04, 0x65, 0x64, 0x69, 0x74, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x06, 0x2a, 0x9d,
	0x01, 0x0a, 0x14, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x10, 0x00,
	0x12, 0x13, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x10, 0x05, 0x2a, 0x5b,
	0x0a, 0x15, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0x03, 0x42, 0x25, 0x5a, 0x23, 0x62,
	0x6f, 0x73, 0x63, 0x61, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bosca_content_permissions_proto_rawDescOnce sync.Once
	file_bosca_content_permissions_proto_rawDescData = file_bosca_content_permissions_proto_rawDesc
)

func file_bosca_content_permissions_proto_rawDescGZIP() []byte {
	file_bosca_content_permissions_proto_rawDescOnce.Do(func() {
		file_bosca_content_permissions_proto_rawDescData = protoimpl.X.CompressGZIP(file_bosca_content_permissions_proto_rawDescData)
	})
	return file_bosca_content_permissions_proto_rawDescData
}

var file_bosca_content_permissions_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_bosca_content_permissions_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_bosca_content_permissions_proto_goTypes = []any{
	(PermissionRelation)(0),         // 0: bosca.content.PermissionRelation
	(PermissionAction)(0),           // 1: bosca.content.PermissionAction
	(PermissionObjectType)(0),       // 2: bosca.content.PermissionObjectType
	(PermissionSubjectType)(0),      // 3: bosca.content.PermissionSubjectType
	(*PermissionCheckRequest)(nil),  // 4: bosca.content.PermissionCheckRequest
	(*PermissionCheckResponse)(nil), // 5: bosca.content.PermissionCheckResponse
	(*Permissions)(nil),             // 6: bosca.content.Permissions
	(*Permission)(nil),              // 7: bosca.content.Permission
}
var file_bosca_content_permissions_proto_depIdxs = []int32{
	2, // 0: bosca.content.PermissionCheckRequest.object_type:type_name -> bosca.content.PermissionObjectType
	3, // 1: bosca.content.PermissionCheckRequest.subject_type:type_name -> bosca.content.PermissionSubjectType
	1, // 2: bosca.content.PermissionCheckRequest.action:type_name -> bosca.content.PermissionAction
	7, // 3: bosca.content.Permissions.permissions:type_name -> bosca.content.Permission
	3, // 4: bosca.content.Permission.subject_type:type_name -> bosca.content.PermissionSubjectType
	0, // 5: bosca.content.Permission.relation:type_name -> bosca.content.PermissionRelation
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_bosca_content_permissions_proto_init() }
func file_bosca_content_permissions_proto_init() {
	if File_bosca_content_permissions_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bosca_content_permissions_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PermissionCheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosca_content_permissions_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PermissionCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosca_content_permissions_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Permissions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosca_content_permissions_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Permission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bosca_content_permissions_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bosca_content_permissions_proto_goTypes,
		DependencyIndexes: file_bosca_content_permissions_proto_depIdxs,
		EnumInfos:         file_bosca_content_permissions_proto_enumTypes,
		MessageInfos:      file_bosca_content_permissions_proto_msgTypes,
	}.Build()
	File_bosca_content_permissions_proto = out.File
	file_bosca_content_permissions_proto_rawDesc = nil
	file_bosca_content_permissions_proto_goTypes = nil
	file_bosca_content_permissions_proto_depIdxs = nil
}
