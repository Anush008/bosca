#file: noinspection YAMLSchemaValidation
traits:
  common.text: { }
  bible.usx:
    workflowIds:
      - bible.usx
  bible.usx.book:
    workflowIds:
      - bible.usx.book
  bible.usx.chapter: { }
  bible.usx.verse:
    workflowIds:
      - bible.usx.verse
  common.temporary: { }

models:
  phi3:medium-128k:
    type: ollama-llm
    name: phi3:medium-128k
    configuration:
      vectorSize: 5120
      contextWindow: 120000
  phi3:mini:
    type: ollama-llm
    name: phi3:mini
    configuration:
      vectorSize: 3072
      contextWindow: 8000

storageSystems:
  metadata.search.index:
    type: search
    configuration:
      indexName: metadata
      type: meilisearch
  bible.chapter.vector.index:
    type: vector
    models:
      phi3:mini:
        configuration: { }
    configuration:
      indexName: biblechapters
      type: qdrant
      vectorSize: 3072
  bible.verse.vector.index:
    type: vector
    models:
      phi3:mini:
        configuration: { }
    configuration:
      indexName: bibleverses
      type: qdrant
      vectorSize: 3072
  bible.verse.label.vector.index:
    type: vector
    models:
      phi3:mini:
        configuration: { }
    configuration:
      indexName: bibleverselabels
      type: qdrant
      vectorSize: 3072

workflows:
  states:
    pending:
      name: Pending
      type: pending
    processing:
      name: Processing
      description: Initial Processing after Metadata Creation
      type: processing
      workflow: metadata.process
    draft:
      name: Draft
      type: draft
    pending-approval:
      name: Pending Approval
      type: approval
    approved:
      name: Approved
      type: approved
    published:
      name: Published
      type: published
    failure:
      name: Failure
      type: failure
  transitions:
    - from: pending
      to: processing
      description: Content is ready, begin processing
    - from: processing
      to: draft
      description: Content has been processed, now in draft mode
    - from: processing
      to: failure
      description: Processing failed
    - from: failure
      to: processing
      description: Re-processing after failure
    - from: draft
      to: processing
      description: Re-processing draft
    - from: draft
      to: published
      description: Publish a draft
  activities:
    metadata.traits.process: { }
    # ai activities
    ai.prompt:
      description: Take the input from the supplementary data and pass it to the provided model using the provided prompt.  The output will be based on the output from the model.
      inputs:
        supplementaryId: supplementary
      outputs:
        supplementaryId: supplementary
    ai.embeddings.text:
      description: Generate embeddings from the supplied supplementary data using the supplied model.  Store the embeddings in the specified storage system.
      inputs:
        supplementaryId: supplementary
    ai.embeddings.pending.from-markdown-table:
      description: Generate pending embeddings (which is a proto structure) from the supplied supplementary data, which should be a markdown table.  The specified columns will be used to construct the pending embedding.
      inputs:
        supplementaryId: supplementary
      outputs:
        supplementaryId: supplementary
      configuration:
        idColumn: Metadata ID
        contentColumn: Labels
    ai.embeddings.pending.index:
      description: Generate embeddings from the supplied supplementary data (which is expected to be pending embeddings).
      inputs:
        supplementaryId: supplementary
    # metadata activities
    metadata.text.extract:
      outputs:
        supplementaryId: supplementary
    metadata.text.index: { }
    metadata.supplementary.text.index:
      inputs:
        supplementaryId: supplementary
    metadata.transition.complete: { }
    metadata.transition.fail: { }
    metadata.transition.to:
      configuration:
        state: ""
        status: ""
    metadata.delete: { }
    # supplementary activities
    supplementary.delete:
      inputs:
        supplementaryId: supplementary
    # bible activities
    bible.process:
      configuration:
        trait: bible.usx
    bible.chapters.create:
      configuration:
        trait: bible.usx.chapter
    bible.chapter.verses.create:
      configuration:
        trait: bible.usx.verse
    bible.book.verse.markdown.table:
      outputs:
        supplementaryId: supplementary
  workflows:
    # metadata workflows
    metadata.process:
      activities:
        metadata.traits.process:
          executionGroup: 1
        metadata.transition.to:
          executionGroup: 2
          configuration:
            state: draft
            status:
      queue: metadata
    # bible workflows
    bible.usx:
      activities:
        bible.process: { }
      queue: bible
    ## bible book workflow
    bible.usx.book:
      activities:
        bible.book.verse.markdown.table:
          executionGroup: 1
          outputs:
            supplementaryId: chapter-verse-table
        bible.chapter.verses.create:
          executionGroup: 1
        ai.prompt:
          executionGroup: 2
          prompts:
            verse.labeller: { }
          models:
            phi3:mini: { }
          inputs:
            supplementaryId: chapter-verse-table
          outputs:
            supplementaryId: chapter-verse-table-prompted
        ai.embeddings.pending.from-markdown-table:
          executionGroup: 3
          models:
            phi3:mini: { }
          inputs:
            supplementaryId: chapter-verse-table-prompted
          outputs:
            supplementaryId: chapter-verse-pending-embeddings
          configuration:
            idColumn: Metadata ID
            contentColumn: Labels
        ai.embeddings.pending.index:
          executionGroup: 4
          inputs:
            supplementaryId: chapter-verse-pending-embeddings
          models:
            phi3:mini: { }
          storageSystems:
            bible.verse.label.vector.index: { }
      queue: bible
    ## bible verse workflow
    bible.usx.verse:
      activities:
        metadata.text.index: { }
      queue: bible

prompts:
  verse.labeller:
    prompt: |
      You are a Biblical theologian who is also an expert in felt needs.  Your job is to classify verses, annotating them with felt needs.  Examples of the felt needs are:
      * salvation
      * forgiveness
      * assurance
      * deliverance
      * healing
      * provision
      * protection
      * guidance
      * wisdom
      * comfort
      * peace
      * joy
      * love
      * belonging
      * purpose
      * restoration
      * vindication
      * hope
      * strength
      * patience
      * faith
      * mercy
      * humility
      * holiness
      * worship
      You to add a column to the markdown table called `tags`, and fill that column with a set of felt needs that best apply to the given verse.

      {table}