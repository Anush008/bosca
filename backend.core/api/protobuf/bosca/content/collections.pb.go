//
// Copyright 2024 Sowers, LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: bosca/content/collections.proto

package content

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CollectionType int32

const (
	CollectionType_standard CollectionType = 0
	CollectionType_folder   CollectionType = 1
	CollectionType_root     CollectionType = 2
)

// Enum value maps for CollectionType.
var (
	CollectionType_name = map[int32]string{
		0: "standard",
		1: "folder",
		2: "root",
	}
	CollectionType_value = map[string]int32{
		"standard": 0,
		"folder":   1,
		"root":     2,
	}
)

func (x CollectionType) Enum() *CollectionType {
	p := new(CollectionType)
	*p = x
	return p
}

func (x CollectionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CollectionType) Descriptor() protoreflect.EnumDescriptor {
	return file_bosca_content_collections_proto_enumTypes[0].Descriptor()
}

func (CollectionType) Type() protoreflect.EnumType {
	return &file_bosca_content_collections_proto_enumTypes[0]
}

func (x CollectionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CollectionType.Descriptor instead.
func (CollectionType) EnumDescriptor() ([]byte, []int) {
	return file_bosca_content_collections_proto_rawDescGZIP(), []int{0}
}

type AddCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent     string      `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	Collection *Collection `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
}

func (x *AddCollectionRequest) Reset() {
	*x = AddCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosca_content_collections_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCollectionRequest) ProtoMessage() {}

func (x *AddCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bosca_content_collections_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCollectionRequest.ProtoReflect.Descriptor instead.
func (*AddCollectionRequest) Descriptor() ([]byte, []int) {
	return file_bosca_content_collections_proto_rawDescGZIP(), []int{0}
}

func (x *AddCollectionRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *AddCollectionRequest) GetCollection() *Collection {
	if x != nil {
		return x.Collection
	}
	return nil
}

type AddCollectionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collections []*AddCollectionRequest `protobuf:"bytes,1,rep,name=collections,proto3" json:"collections,omitempty"`
}

func (x *AddCollectionsRequest) Reset() {
	*x = AddCollectionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosca_content_collections_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCollectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCollectionsRequest) ProtoMessage() {}

func (x *AddCollectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bosca_content_collections_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCollectionsRequest.ProtoReflect.Descriptor instead.
func (*AddCollectionsRequest) Descriptor() ([]byte, []int) {
	return file_bosca_content_collections_proto_rawDescGZIP(), []int{1}
}

func (x *AddCollectionsRequest) GetCollections() []*AddCollectionRequest {
	if x != nil {
		return x.Collections
	}
	return nil
}

type AddCollectionItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId string `protobuf:"bytes,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	// Types that are assignable to ItemId:
	//
	//	*AddCollectionItemRequest_ChildCollectionId
	//	*AddCollectionItemRequest_ChildMetadataId
	ItemId isAddCollectionItemRequest_ItemId `protobuf_oneof:"item_id"`
}

func (x *AddCollectionItemRequest) Reset() {
	*x = AddCollectionItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosca_content_collections_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCollectionItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCollectionItemRequest) ProtoMessage() {}

func (x *AddCollectionItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bosca_content_collections_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCollectionItemRequest.ProtoReflect.Descriptor instead.
func (*AddCollectionItemRequest) Descriptor() ([]byte, []int) {
	return file_bosca_content_collections_proto_rawDescGZIP(), []int{2}
}

func (x *AddCollectionItemRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (m *AddCollectionItemRequest) GetItemId() isAddCollectionItemRequest_ItemId {
	if m != nil {
		return m.ItemId
	}
	return nil
}

func (x *AddCollectionItemRequest) GetChildCollectionId() string {
	if x, ok := x.GetItemId().(*AddCollectionItemRequest_ChildCollectionId); ok {
		return x.ChildCollectionId
	}
	return ""
}

func (x *AddCollectionItemRequest) GetChildMetadataId() string {
	if x, ok := x.GetItemId().(*AddCollectionItemRequest_ChildMetadataId); ok {
		return x.ChildMetadataId
	}
	return ""
}

type isAddCollectionItemRequest_ItemId interface {
	isAddCollectionItemRequest_ItemId()
}

type AddCollectionItemRequest_ChildCollectionId struct {
	ChildCollectionId string `protobuf:"bytes,2,opt,name=child_collection_id,json=childCollectionId,proto3,oneof"`
}

type AddCollectionItemRequest_ChildMetadataId struct {
	ChildMetadataId string `protobuf:"bytes,3,opt,name=child_metadata_id,json=childMetadataId,proto3,oneof"`
}

func (*AddCollectionItemRequest_ChildCollectionId) isAddCollectionItemRequest_ItemId() {}

func (*AddCollectionItemRequest_ChildMetadataId) isAddCollectionItemRequest_ItemId() {}

type Collection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Type        CollectionType         `protobuf:"varint,5,opt,name=type,proto3,enum=bosca.content.CollectionType" json:"type,omitempty"`
	TraitIds    []string               `protobuf:"bytes,11,rep,name=trait_ids,json=traitIds,proto3" json:"trait_ids,omitempty"`
	CategoryIds []string               `protobuf:"bytes,12,rep,name=category_ids,json=categoryIds,proto3" json:"category_ids,omitempty"`
	Labels      []string               `protobuf:"bytes,13,rep,name=labels,proto3" json:"labels,omitempty"`
	Attributes  map[string]string      `protobuf:"bytes,14,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Created     *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=created,proto3" json:"created,omitempty"`
	Modified    *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=modified,proto3" json:"modified,omitempty"`
	Metadata    *structpb.Struct       `protobuf:"bytes,33,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *Collection) Reset() {
	*x = Collection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosca_content_collections_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Collection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collection) ProtoMessage() {}

func (x *Collection) ProtoReflect() protoreflect.Message {
	mi := &file_bosca_content_collections_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collection.ProtoReflect.Descriptor instead.
func (*Collection) Descriptor() ([]byte, []int) {
	return file_bosca_content_collections_proto_rawDescGZIP(), []int{3}
}

func (x *Collection) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Collection) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Collection) GetType() CollectionType {
	if x != nil {
		return x.Type
	}
	return CollectionType_standard
}

func (x *Collection) GetTraitIds() []string {
	if x != nil {
		return x.TraitIds
	}
	return nil
}

func (x *Collection) GetCategoryIds() []string {
	if x != nil {
		return x.CategoryIds
	}
	return nil
}

func (x *Collection) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Collection) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Collection) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Collection) GetModified() *timestamppb.Timestamp {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *Collection) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type Collections struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collections []*Collection `protobuf:"bytes,1,rep,name=collections,proto3" json:"collections,omitempty"`
}

func (x *Collections) Reset() {
	*x = Collections{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosca_content_collections_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Collections) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collections) ProtoMessage() {}

func (x *Collections) ProtoReflect() protoreflect.Message {
	mi := &file_bosca_content_collections_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collections.ProtoReflect.Descriptor instead.
func (*Collections) Descriptor() ([]byte, []int) {
	return file_bosca_content_collections_proto_rawDescGZIP(), []int{4}
}

func (x *Collections) GetCollections() []*Collection {
	if x != nil {
		return x.Collections
	}
	return nil
}

type CollectionItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*CollectionItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *CollectionItems) Reset() {
	*x = CollectionItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosca_content_collections_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionItems) ProtoMessage() {}

func (x *CollectionItems) ProtoReflect() protoreflect.Message {
	mi := &file_bosca_content_collections_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionItems.ProtoReflect.Descriptor instead.
func (*CollectionItems) Descriptor() ([]byte, []int) {
	return file_bosca_content_collections_proto_rawDescGZIP(), []int{5}
}

func (x *CollectionItems) GetItems() []*CollectionItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type CollectionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Item:
	//
	//	*CollectionItem_Metadata
	//	*CollectionItem_Collection
	Item isCollectionItem_Item `protobuf_oneof:"Item"`
}

func (x *CollectionItem) Reset() {
	*x = CollectionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosca_content_collections_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionItem) ProtoMessage() {}

func (x *CollectionItem) ProtoReflect() protoreflect.Message {
	mi := &file_bosca_content_collections_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionItem.ProtoReflect.Descriptor instead.
func (*CollectionItem) Descriptor() ([]byte, []int) {
	return file_bosca_content_collections_proto_rawDescGZIP(), []int{6}
}

func (m *CollectionItem) GetItem() isCollectionItem_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (x *CollectionItem) GetMetadata() *Metadata {
	if x, ok := x.GetItem().(*CollectionItem_Metadata); ok {
		return x.Metadata
	}
	return nil
}

func (x *CollectionItem) GetCollection() *Collection {
	if x, ok := x.GetItem().(*CollectionItem_Collection); ok {
		return x.Collection
	}
	return nil
}

type isCollectionItem_Item interface {
	isCollectionItem_Item()
}

type CollectionItem_Metadata struct {
	Metadata *Metadata `protobuf:"bytes,1,opt,name=metadata,proto3,oneof"`
}

type CollectionItem_Collection struct {
	Collection *Collection `protobuf:"bytes,3,opt,name=collection,proto3,oneof"`
}

func (*CollectionItem_Metadata) isCollectionItem_Item() {}

func (*CollectionItem_Collection) isCollectionItem_Item() {}

type FindCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes map[string]string `protobuf:"bytes,1,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *FindCollectionRequest) Reset() {
	*x = FindCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosca_content_collections_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCollectionRequest) ProtoMessage() {}

func (x *FindCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bosca_content_collections_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCollectionRequest.ProtoReflect.Descriptor instead.
func (*FindCollectionRequest) Descriptor() ([]byte, []int) {
	return file_bosca_content_collections_proto_rawDescGZIP(), []int{7}
}

func (x *FindCollectionRequest) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

var File_bosca_content_collections_proto protoreflect.FileDescriptor

var file_bosca_content_collections_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2f,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0d, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x1a, 0x1c, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2f,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x69, 0x0a,
	0x14, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5e, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x45, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xaa, 0x01, 0x0a, 0x18, 0x41, 0x64, 0x64,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x68,
	0x69, 0x6c, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x11, 0x63, 0x68, 0x69, 0x6c, 0x64,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x68, 0x69, 0x6c, 0x64,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x22, 0xe8, 0x03, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x72, 0x61, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x72, 0x61, 0x69, 0x74, 0x49, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x12, 0x49, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x34,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x4a, 0x0a, 0x0b, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x3b, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x46, 0x0a, 0x0f,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x33, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x35, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x6f, 0x73, 0x63,
	0x61, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3b,
	0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x49,
	0x74, 0x65, 0x6d, 0x22, 0xac, 0x01, 0x0a, 0x15, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x54, 0x0a,
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x2a, 0x34, 0x0a, 0x0e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x10, 0x01, 0x12, 0x08,
	0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x10, 0x02, 0x42, 0x25, 0x5a, 0x23, 0x62, 0x6f, 0x73, 0x63,
	0x61, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bosca_content_collections_proto_rawDescOnce sync.Once
	file_bosca_content_collections_proto_rawDescData = file_bosca_content_collections_proto_rawDesc
)

func file_bosca_content_collections_proto_rawDescGZIP() []byte {
	file_bosca_content_collections_proto_rawDescOnce.Do(func() {
		file_bosca_content_collections_proto_rawDescData = protoimpl.X.CompressGZIP(file_bosca_content_collections_proto_rawDescData)
	})
	return file_bosca_content_collections_proto_rawDescData
}

var file_bosca_content_collections_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_bosca_content_collections_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_bosca_content_collections_proto_goTypes = []any{
	(CollectionType)(0),              // 0: bosca.content.CollectionType
	(*AddCollectionRequest)(nil),     // 1: bosca.content.AddCollectionRequest
	(*AddCollectionsRequest)(nil),    // 2: bosca.content.AddCollectionsRequest
	(*AddCollectionItemRequest)(nil), // 3: bosca.content.AddCollectionItemRequest
	(*Collection)(nil),               // 4: bosca.content.Collection
	(*Collections)(nil),              // 5: bosca.content.Collections
	(*CollectionItems)(nil),          // 6: bosca.content.CollectionItems
	(*CollectionItem)(nil),           // 7: bosca.content.CollectionItem
	(*FindCollectionRequest)(nil),    // 8: bosca.content.FindCollectionRequest
	nil,                              // 9: bosca.content.Collection.AttributesEntry
	nil,                              // 10: bosca.content.FindCollectionRequest.AttributesEntry
	(*timestamppb.Timestamp)(nil),    // 11: google.protobuf.Timestamp
	(*structpb.Struct)(nil),          // 12: google.protobuf.Struct
	(*Metadata)(nil),                 // 13: bosca.content.Metadata
}
var file_bosca_content_collections_proto_depIdxs = []int32{
	4,  // 0: bosca.content.AddCollectionRequest.collection:type_name -> bosca.content.Collection
	1,  // 1: bosca.content.AddCollectionsRequest.collections:type_name -> bosca.content.AddCollectionRequest
	0,  // 2: bosca.content.Collection.type:type_name -> bosca.content.CollectionType
	9,  // 3: bosca.content.Collection.attributes:type_name -> bosca.content.Collection.AttributesEntry
	11, // 4: bosca.content.Collection.created:type_name -> google.protobuf.Timestamp
	11, // 5: bosca.content.Collection.modified:type_name -> google.protobuf.Timestamp
	12, // 6: bosca.content.Collection.metadata:type_name -> google.protobuf.Struct
	4,  // 7: bosca.content.Collections.collections:type_name -> bosca.content.Collection
	7,  // 8: bosca.content.CollectionItems.items:type_name -> bosca.content.CollectionItem
	13, // 9: bosca.content.CollectionItem.metadata:type_name -> bosca.content.Metadata
	4,  // 10: bosca.content.CollectionItem.collection:type_name -> bosca.content.Collection
	10, // 11: bosca.content.FindCollectionRequest.attributes:type_name -> bosca.content.FindCollectionRequest.AttributesEntry
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_bosca_content_collections_proto_init() }
func file_bosca_content_collections_proto_init() {
	if File_bosca_content_collections_proto != nil {
		return
	}
	file_bosca_content_metadata_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_bosca_content_collections_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AddCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosca_content_collections_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AddCollectionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosca_content_collections_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AddCollectionItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosca_content_collections_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Collection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosca_content_collections_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Collections); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosca_content_collections_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CollectionItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosca_content_collections_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CollectionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosca_content_collections_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*FindCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bosca_content_collections_proto_msgTypes[2].OneofWrappers = []any{
		(*AddCollectionItemRequest_ChildCollectionId)(nil),
		(*AddCollectionItemRequest_ChildMetadataId)(nil),
	}
	file_bosca_content_collections_proto_msgTypes[6].OneofWrappers = []any{
		(*CollectionItem_Metadata)(nil),
		(*CollectionItem_Collection)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bosca_content_collections_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bosca_content_collections_proto_goTypes,
		DependencyIndexes: file_bosca_content_collections_proto_depIdxs,
		EnumInfos:         file_bosca_content_collections_proto_enumTypes,
		MessageInfos:      file_bosca_content_collections_proto_msgTypes,
	}.Build()
	File_bosca_content_collections_proto = out.File
	file_bosca_content_collections_proto_rawDesc = nil
	file_bosca_content_collections_proto_goTypes = nil
	file_bosca_content_collections_proto_depIdxs = nil
}
