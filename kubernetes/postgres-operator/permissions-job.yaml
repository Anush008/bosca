apiVersion: batch/v1
kind: Job
metadata:
  name: permissions
  namespace: postgres
spec:
  backoffLimit: 6
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: psql-postgres
          image: registry.developers.crunchydata.com/crunchydata/crunchy-postgres:ubi8-16.2-0
          command:
            - psql
            - "host=$(HOST) dbname=postgres user=postgres password=$(PASSWORD)"
            - -c
            - "alter role _crunchypgbouncer SET search_path TO public, pgbouncer; grant usage on schema pgbouncer to _crunchypgbouncer; grant execute on function pgbouncer.get_auth(text) to _crunchypgbouncer;"
          env:
            - name: HOST
              valueFrom: { secretKeyRef: { name: postgres-pguser-postgres, key: host } }
            - name: PASSWORD
              valueFrom: { secretKeyRef: { name: postgres-pguser-postgres, key: password } }
        - name: psql-spicedb
          image: registry.developers.crunchydata.com/crunchydata/crunchy-postgres:ubi8-16.2-0
          command:
            - psql
            - "host=$(HOST) dbname=spicedb user=postgres password=$(PASSWORD)"
            - -c
            - "alter role _crunchypgbouncer SET search_path TO public, pgbouncer; grant create on schema public to _crunchypgbouncer, spicedb; grant usage on schema pgbouncer to _crunchypgbouncer, spicedb; grant execute on function pgbouncer.get_auth(text) to _crunchypgbouncer, spicedb;"
          env:
            - name: HOST
              valueFrom: { secretKeyRef: { name: postgres-pguser-postgres, key: host } }
            - name: PASSWORD
              valueFrom: { secretKeyRef: { name: postgres-pguser-postgres, key: password } }
        - name: psql-boscasecurity
          image: registry.developers.crunchydata.com/crunchydata/crunchy-postgres:ubi8-16.2-0
          command:
            - psql
            - "host=$(HOST) dbname=boscasecurity user=postgres password=$(PASSWORD)"
            - -c
            - "alter role _crunchypgbouncer SET search_path TO public, pgbouncer; grant create on schema public to _crunchypgbouncer, boscasecurity; grant usage on schema pgbouncer to _crunchypgbouncer, boscasecurity; grant execute on function pgbouncer.get_auth(text) to _crunchypgbouncer, boscasecurity;"
          env:
            - name: HOST
              valueFrom: { secretKeyRef: { name: postgres-pguser-postgres, key: host } }
            - name: PASSWORD
              valueFrom: { secretKeyRef: { name: postgres-pguser-postgres, key: password } }
        - name: psql-boscaprofiles
          image: registry.developers.crunchydata.com/crunchydata/crunchy-postgres:ubi8-16.2-0
          command:
            - psql
            - "host=$(HOST) dbname=boscaprofiles user=postgres password=$(PASSWORD)"
            - -c
            - "alter role _crunchypgbouncer SET search_path TO public, pgbouncer; grant create on schema public to _crunchypgbouncer, boscaprofiles; grant usage on schema pgbouncer to _crunchypgbouncer, boscaprofiles; grant execute on function pgbouncer.get_auth(text) to _crunchypgbouncer, boscaprofiles;"
          env:
            - name: HOST
              valueFrom: { secretKeyRef: { name: postgres-pguser-postgres, key: host } }
            - name: PASSWORD
              valueFrom: { secretKeyRef: { name: postgres-pguser-postgres, key: password } }
        - name: psql-boscacontent
          image: registry.developers.crunchydata.com/crunchydata/crunchy-postgres:ubi8-16.2-0
          command:
            - psql
            - "host=$(HOST) dbname=boscacontent user=postgres password=$(PASSWORD)"
            - -c
            - "alter role _crunchypgbouncer SET search_path TO public, pgbouncer; grant create on schema public to _crunchypgbouncer, boscacontent; grant usage on schema pgbouncer to _crunchypgbouncer, boscacontent; grant execute on function pgbouncer.get_auth(text) to _crunchypgbouncer, boscacontent;"
          env:
            - name: HOST
              valueFrom: { secretKeyRef: { name: postgres-pguser-postgres, key: host } }
            - name: PASSWORD
              valueFrom: { secretKeyRef: { name: postgres-pguser-postgres, key: password } }
        - name: psql-boscaaccounts
          image: registry.developers.crunchydata.com/crunchydata/crunchy-postgres:ubi8-16.2-0
          command:
            - psql
            - "host=$(HOST) dbname=boscaaccounts user=postgres password=$(PASSWORD)"
            - -c
            - "alter role _crunchypgbouncer SET search_path TO public, pgbouncer; grant create on schema public to _crunchypgbouncer, boscaaccounts; grant usage on schema pgbouncer to _crunchypgbouncer, boscaaccounts; grant execute on function pgbouncer.get_auth(text) to _crunchypgbouncer, boscaaccounts;"
          env:
            - name: HOST
              valueFrom: { secretKeyRef: { name: postgres-pguser-postgres, key: host } }
            - name: PASSWORD
              valueFrom: { secretKeyRef: { name: postgres-pguser-postgres, key: password } }
        - name: psql-kong
          image: registry.developers.crunchydata.com/crunchydata/crunchy-postgres:ubi8-16.2-0
          command:
            - psql
            - "host=$(HOST) dbname=kong user=postgres password=$(PASSWORD)"
            - -c
            - "alter role _crunchypgbouncer SET search_path TO public, pgbouncer; grant create on schema public to _crunchypgbouncer, kong; grant usage on schema pgbouncer to _crunchypgbouncer, kong; grant execute on function pgbouncer.get_auth(text) to _crunchypgbouncer, kong;"
          env:
            - name: HOST
              valueFrom: { secretKeyRef: { name: postgres-pguser-postgres, key: host } }
            - name: PASSWORD
              valueFrom: { secretKeyRef: { name: postgres-pguser-postgres, key: password } }