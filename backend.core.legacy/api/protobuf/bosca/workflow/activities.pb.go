//
// Copyright 2024 Sowers, LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: bosca/workflow/activities.proto

package workflow

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WorkflowActivityParameterType int32

const (
	WorkflowActivityParameterType_unknown_activity_parameter_type WorkflowActivityParameterType = 0
	WorkflowActivityParameterType_context                         WorkflowActivityParameterType = 1
	WorkflowActivityParameterType_supplementary                   WorkflowActivityParameterType = 2
)

// Enum value maps for WorkflowActivityParameterType.
var (
	WorkflowActivityParameterType_name = map[int32]string{
		0: "unknown_activity_parameter_type",
		1: "context",
		2: "supplementary",
	}
	WorkflowActivityParameterType_value = map[string]int32{
		"unknown_activity_parameter_type": 0,
		"context":                         1,
		"supplementary":                   2,
	}
)

func (x WorkflowActivityParameterType) Enum() *WorkflowActivityParameterType {
	p := new(WorkflowActivityParameterType)
	*p = x
	return p
}

func (x WorkflowActivityParameterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkflowActivityParameterType) Descriptor() protoreflect.EnumDescriptor {
	return file_bosca_workflow_activities_proto_enumTypes[0].Descriptor()
}

func (WorkflowActivityParameterType) Type() protoreflect.EnumType {
	return &file_bosca_workflow_activities_proto_enumTypes[0]
}

func (x WorkflowActivityParameterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkflowActivityParameterType.Descriptor instead.
func (WorkflowActivityParameterType) EnumDescriptor() ([]byte, []int) {
	return file_bosca_workflow_activities_proto_rawDescGZIP(), []int{0}
}

type Activity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string                                   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description     string                                   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	ChildWorkflowId *string                                  `protobuf:"bytes,4,opt,name=child_workflow_id,json=childWorkflowId,proto3,oneof" json:"child_workflow_id,omitempty"`
	Configuration   map[string]string                        `protobuf:"bytes,5,rep,name=configuration,proto3" json:"configuration,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Inputs          map[string]WorkflowActivityParameterType `protobuf:"bytes,6,rep,name=inputs,proto3" json:"inputs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=bosca.workflow.WorkflowActivityParameterType"`
	Outputs         map[string]WorkflowActivityParameterType `protobuf:"bytes,7,rep,name=outputs,proto3" json:"outputs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=bosca.workflow.WorkflowActivityParameterType"`
}

func (x *Activity) Reset() {
	*x = Activity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosca_workflow_activities_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Activity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activity) ProtoMessage() {}

func (x *Activity) ProtoReflect() protoreflect.Message {
	mi := &file_bosca_workflow_activities_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Activity.ProtoReflect.Descriptor instead.
func (*Activity) Descriptor() ([]byte, []int) {
	return file_bosca_workflow_activities_proto_rawDescGZIP(), []int{0}
}

func (x *Activity) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Activity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Activity) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Activity) GetChildWorkflowId() string {
	if x != nil && x.ChildWorkflowId != nil {
		return *x.ChildWorkflowId
	}
	return ""
}

func (x *Activity) GetConfiguration() map[string]string {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *Activity) GetInputs() map[string]WorkflowActivityParameterType {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *Activity) GetOutputs() map[string]WorkflowActivityParameterType {
	if x != nil {
		return x.Outputs
	}
	return nil
}

type WorkflowActivityPrompt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prompt        *Prompt           `protobuf:"bytes,1,opt,name=prompt,proto3" json:"prompt,omitempty"`
	Configuration map[string]string `protobuf:"bytes,2,rep,name=configuration,proto3" json:"configuration,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *WorkflowActivityPrompt) Reset() {
	*x = WorkflowActivityPrompt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosca_workflow_activities_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowActivityPrompt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowActivityPrompt) ProtoMessage() {}

func (x *WorkflowActivityPrompt) ProtoReflect() protoreflect.Message {
	mi := &file_bosca_workflow_activities_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowActivityPrompt.ProtoReflect.Descriptor instead.
func (*WorkflowActivityPrompt) Descriptor() ([]byte, []int) {
	return file_bosca_workflow_activities_proto_rawDescGZIP(), []int{1}
}

func (x *WorkflowActivityPrompt) GetPrompt() *Prompt {
	if x != nil {
		return x.Prompt
	}
	return nil
}

func (x *WorkflowActivityPrompt) GetConfiguration() map[string]string {
	if x != nil {
		return x.Configuration
	}
	return nil
}

type WorkflowActivityPrompts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prompts []*WorkflowActivityPrompt `protobuf:"bytes,1,rep,name=prompts,proto3" json:"prompts,omitempty"`
}

func (x *WorkflowActivityPrompts) Reset() {
	*x = WorkflowActivityPrompts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosca_workflow_activities_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowActivityPrompts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowActivityPrompts) ProtoMessage() {}

func (x *WorkflowActivityPrompts) ProtoReflect() protoreflect.Message {
	mi := &file_bosca_workflow_activities_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowActivityPrompts.ProtoReflect.Descriptor instead.
func (*WorkflowActivityPrompts) Descriptor() ([]byte, []int) {
	return file_bosca_workflow_activities_proto_rawDescGZIP(), []int{2}
}

func (x *WorkflowActivityPrompts) GetPrompts() []*WorkflowActivityPrompt {
	if x != nil {
		return x.Prompts
	}
	return nil
}

type WorkflowActivityStorageSystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageSystem *StorageSystem        `protobuf:"bytes,1,opt,name=storage_system,json=storageSystem,proto3" json:"storage_system,omitempty"`
	Models        []*StorageSystemModel `protobuf:"bytes,2,rep,name=models,proto3" json:"models,omitempty"`
	Configuration map[string]string     `protobuf:"bytes,3,rep,name=configuration,proto3" json:"configuration,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *WorkflowActivityStorageSystem) Reset() {
	*x = WorkflowActivityStorageSystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosca_workflow_activities_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowActivityStorageSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowActivityStorageSystem) ProtoMessage() {}

func (x *WorkflowActivityStorageSystem) ProtoReflect() protoreflect.Message {
	mi := &file_bosca_workflow_activities_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowActivityStorageSystem.ProtoReflect.Descriptor instead.
func (*WorkflowActivityStorageSystem) Descriptor() ([]byte, []int) {
	return file_bosca_workflow_activities_proto_rawDescGZIP(), []int{3}
}

func (x *WorkflowActivityStorageSystem) GetStorageSystem() *StorageSystem {
	if x != nil {
		return x.StorageSystem
	}
	return nil
}

func (x *WorkflowActivityStorageSystem) GetModels() []*StorageSystemModel {
	if x != nil {
		return x.Models
	}
	return nil
}

func (x *WorkflowActivityStorageSystem) GetConfiguration() map[string]string {
	if x != nil {
		return x.Configuration
	}
	return nil
}

type WorkflowActivityStorageSystems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Systems []*WorkflowActivityStorageSystem `protobuf:"bytes,1,rep,name=systems,proto3" json:"systems,omitempty"`
}

func (x *WorkflowActivityStorageSystems) Reset() {
	*x = WorkflowActivityStorageSystems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosca_workflow_activities_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowActivityStorageSystems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowActivityStorageSystems) ProtoMessage() {}

func (x *WorkflowActivityStorageSystems) ProtoReflect() protoreflect.Message {
	mi := &file_bosca_workflow_activities_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowActivityStorageSystems.ProtoReflect.Descriptor instead.
func (*WorkflowActivityStorageSystems) Descriptor() ([]byte, []int) {
	return file_bosca_workflow_activities_proto_rawDescGZIP(), []int{4}
}

func (x *WorkflowActivityStorageSystems) GetSystems() []*WorkflowActivityStorageSystem {
	if x != nil {
		return x.Systems
	}
	return nil
}

type WorkflowActivityModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Model         *Model            `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	Configuration map[string]string `protobuf:"bytes,2,rep,name=configuration,proto3" json:"configuration,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *WorkflowActivityModel) Reset() {
	*x = WorkflowActivityModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosca_workflow_activities_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowActivityModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowActivityModel) ProtoMessage() {}

func (x *WorkflowActivityModel) ProtoReflect() protoreflect.Message {
	mi := &file_bosca_workflow_activities_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowActivityModel.ProtoReflect.Descriptor instead.
func (*WorkflowActivityModel) Descriptor() ([]byte, []int) {
	return file_bosca_workflow_activities_proto_rawDescGZIP(), []int{5}
}

func (x *WorkflowActivityModel) GetModel() *Model {
	if x != nil {
		return x.Model
	}
	return nil
}

func (x *WorkflowActivityModel) GetConfiguration() map[string]string {
	if x != nil {
		return x.Configuration
	}
	return nil
}

type WorkflowActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkflowActivityId int64             `protobuf:"varint,1,opt,name=workflow_activity_id,json=workflowActivityId,proto3" json:"workflow_activity_id,omitempty"`
	ActivityId         string            `protobuf:"bytes,2,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	ChildWorkflowId    *string           `protobuf:"bytes,3,opt,name=child_workflow_id,json=childWorkflowId,proto3,oneof" json:"child_workflow_id,omitempty"`
	Queue              string            `protobuf:"bytes,4,opt,name=queue,proto3" json:"queue,omitempty"`
	ExecutionGroup     int32             `protobuf:"varint,5,opt,name=execution_group,json=executionGroup,proto3" json:"execution_group,omitempty"`
	Configuration      map[string]string `protobuf:"bytes,6,rep,name=configuration,proto3" json:"configuration,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Inputs             map[string]string `protobuf:"bytes,7,rep,name=inputs,proto3" json:"inputs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Outputs            map[string]string `protobuf:"bytes,8,rep,name=outputs,proto3" json:"outputs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *WorkflowActivity) Reset() {
	*x = WorkflowActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosca_workflow_activities_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowActivity) ProtoMessage() {}

func (x *WorkflowActivity) ProtoReflect() protoreflect.Message {
	mi := &file_bosca_workflow_activities_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowActivity.ProtoReflect.Descriptor instead.
func (*WorkflowActivity) Descriptor() ([]byte, []int) {
	return file_bosca_workflow_activities_proto_rawDescGZIP(), []int{6}
}

func (x *WorkflowActivity) GetWorkflowActivityId() int64 {
	if x != nil {
		return x.WorkflowActivityId
	}
	return 0
}

func (x *WorkflowActivity) GetActivityId() string {
	if x != nil {
		return x.ActivityId
	}
	return ""
}

func (x *WorkflowActivity) GetChildWorkflowId() string {
	if x != nil && x.ChildWorkflowId != nil {
		return *x.ChildWorkflowId
	}
	return ""
}

func (x *WorkflowActivity) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *WorkflowActivity) GetExecutionGroup() int32 {
	if x != nil {
		return x.ExecutionGroup
	}
	return 0
}

func (x *WorkflowActivity) GetConfiguration() map[string]string {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *WorkflowActivity) GetInputs() map[string]string {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *WorkflowActivity) GetOutputs() map[string]string {
	if x != nil {
		return x.Outputs
	}
	return nil
}

type WorkflowActivities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Activities []*WorkflowActivity `protobuf:"bytes,1,rep,name=activities,proto3" json:"activities,omitempty"`
}

func (x *WorkflowActivities) Reset() {
	*x = WorkflowActivities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosca_workflow_activities_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowActivities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowActivities) ProtoMessage() {}

func (x *WorkflowActivities) ProtoReflect() protoreflect.Message {
	mi := &file_bosca_workflow_activities_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowActivities.ProtoReflect.Descriptor instead.
func (*WorkflowActivities) Descriptor() ([]byte, []int) {
	return file_bosca_workflow_activities_proto_rawDescGZIP(), []int{7}
}

func (x *WorkflowActivities) GetActivities() []*WorkflowActivity {
	if x != nil {
		return x.Activities
	}
	return nil
}

type WorkflowActivityIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkflowId string `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	ActivityId string `protobuf:"bytes,2,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
}

func (x *WorkflowActivityIdRequest) Reset() {
	*x = WorkflowActivityIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosca_workflow_activities_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowActivityIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowActivityIdRequest) ProtoMessage() {}

func (x *WorkflowActivityIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bosca_workflow_activities_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowActivityIdRequest.ProtoReflect.Descriptor instead.
func (*WorkflowActivityIdRequest) Descriptor() ([]byte, []int) {
	return file_bosca_workflow_activities_proto_rawDescGZIP(), []int{8}
}

func (x *WorkflowActivityIdRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *WorkflowActivityIdRequest) GetActivityId() string {
	if x != nil {
		return x.ActivityId
	}
	return ""
}

var File_bosca_workflow_activities_proto protoreflect.FileDescriptor

var file_bosca_workflow_activities_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0e, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x1a, 0x1c, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x24, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2f,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2f, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x80, 0x05, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x11, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x51, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x62, 0x6f, 0x73, 0x63, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x06, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x6f, 0x73, 0x63,
	0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x3f, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x6f, 0x73, 0x63, 0x61,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x1a, 0x40, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x68, 0x0a, 0x0b, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x43, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x62, 0x6f, 0x73,
	0x63, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x69, 0x0a, 0x0c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x43, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42,
	0x14, 0x0a, 0x12, 0x5f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x5f, 0x69, 0x64, 0x22, 0xeb, 0x01, 0x0a, 0x16, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74,
	0x12, 0x2e, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74,
	0x12, 0x5f, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x40, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x5b, 0x0a, 0x17, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x73, 0x12, 0x40,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x73,
	0x22, 0xcb, 0x02, 0x0a, 0x1d, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x12, 0x44, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x6f, 0x73,
	0x63, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x3a, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x6f, 0x73, 0x63, 0x61,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x06, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x12, 0x66, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x62, 0x6f,
	0x73, 0x63, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x40, 0x0a, 0x12,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x69,
	0x0a, 0x1e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x47, 0x0a, 0x07, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x52, 0x07, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xe6, 0x01, 0x0a, 0x15, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x12, 0x2b, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x12, 0x5e, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0x40, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x8e, 0x05, 0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x14, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x11, 0x63, 0x68,
	0x69, 0x6c, 0x64, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x59, 0x0a, 0x0d, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x47, 0x0a, 0x07, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62,
	0x6f, 0x73, 0x63, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x73, 0x1a, 0x40, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x3a, 0x0a, 0x0c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x14, 0x0a,
	0x12, 0x5f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x5f, 0x69, 0x64, 0x22, 0x56, 0x0a, 0x12, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x62, 0x6f, 0x73, 0x63, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x5d, 0x0a, 0x19, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x2a, 0x64, 0x0a, 0x1d, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x1f, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x10, 0x01, 0x12, 0x11, 0x0a,
	0x0d, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x10, 0x02,
	0x42, 0x26, 0x5a, 0x24, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x62, 0x6f, 0x73, 0x63, 0x61, 0x2f,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bosca_workflow_activities_proto_rawDescOnce sync.Once
	file_bosca_workflow_activities_proto_rawDescData = file_bosca_workflow_activities_proto_rawDesc
)

func file_bosca_workflow_activities_proto_rawDescGZIP() []byte {
	file_bosca_workflow_activities_proto_rawDescOnce.Do(func() {
		file_bosca_workflow_activities_proto_rawDescData = protoimpl.X.CompressGZIP(file_bosca_workflow_activities_proto_rawDescData)
	})
	return file_bosca_workflow_activities_proto_rawDescData
}

var file_bosca_workflow_activities_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_bosca_workflow_activities_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_bosca_workflow_activities_proto_goTypes = []any{
	(WorkflowActivityParameterType)(0),     // 0: bosca.workflow.WorkflowActivityParameterType
	(*Activity)(nil),                       // 1: bosca.workflow.Activity
	(*WorkflowActivityPrompt)(nil),         // 2: bosca.workflow.WorkflowActivityPrompt
	(*WorkflowActivityPrompts)(nil),        // 3: bosca.workflow.WorkflowActivityPrompts
	(*WorkflowActivityStorageSystem)(nil),  // 4: bosca.workflow.WorkflowActivityStorageSystem
	(*WorkflowActivityStorageSystems)(nil), // 5: bosca.workflow.WorkflowActivityStorageSystems
	(*WorkflowActivityModel)(nil),          // 6: bosca.workflow.WorkflowActivityModel
	(*WorkflowActivity)(nil),               // 7: bosca.workflow.WorkflowActivity
	(*WorkflowActivities)(nil),             // 8: bosca.workflow.WorkflowActivities
	(*WorkflowActivityIdRequest)(nil),      // 9: bosca.workflow.WorkflowActivityIdRequest
	nil,                                    // 10: bosca.workflow.Activity.ConfigurationEntry
	nil,                                    // 11: bosca.workflow.Activity.InputsEntry
	nil,                                    // 12: bosca.workflow.Activity.OutputsEntry
	nil,                                    // 13: bosca.workflow.WorkflowActivityPrompt.ConfigurationEntry
	nil,                                    // 14: bosca.workflow.WorkflowActivityStorageSystem.ConfigurationEntry
	nil,                                    // 15: bosca.workflow.WorkflowActivityModel.ConfigurationEntry
	nil,                                    // 16: bosca.workflow.WorkflowActivity.ConfigurationEntry
	nil,                                    // 17: bosca.workflow.WorkflowActivity.InputsEntry
	nil,                                    // 18: bosca.workflow.WorkflowActivity.OutputsEntry
	(*Prompt)(nil),                         // 19: bosca.workflow.Prompt
	(*StorageSystem)(nil),                  // 20: bosca.workflow.StorageSystem
	(*StorageSystemModel)(nil),             // 21: bosca.workflow.StorageSystemModel
	(*Model)(nil),                          // 22: bosca.workflow.Model
}
var file_bosca_workflow_activities_proto_depIdxs = []int32{
	10, // 0: bosca.workflow.Activity.configuration:type_name -> bosca.workflow.Activity.ConfigurationEntry
	11, // 1: bosca.workflow.Activity.inputs:type_name -> bosca.workflow.Activity.InputsEntry
	12, // 2: bosca.workflow.Activity.outputs:type_name -> bosca.workflow.Activity.OutputsEntry
	19, // 3: bosca.workflow.WorkflowActivityPrompt.prompt:type_name -> bosca.workflow.Prompt
	13, // 4: bosca.workflow.WorkflowActivityPrompt.configuration:type_name -> bosca.workflow.WorkflowActivityPrompt.ConfigurationEntry
	2,  // 5: bosca.workflow.WorkflowActivityPrompts.prompts:type_name -> bosca.workflow.WorkflowActivityPrompt
	20, // 6: bosca.workflow.WorkflowActivityStorageSystem.storage_system:type_name -> bosca.workflow.StorageSystem
	21, // 7: bosca.workflow.WorkflowActivityStorageSystem.models:type_name -> bosca.workflow.StorageSystemModel
	14, // 8: bosca.workflow.WorkflowActivityStorageSystem.configuration:type_name -> bosca.workflow.WorkflowActivityStorageSystem.ConfigurationEntry
	4,  // 9: bosca.workflow.WorkflowActivityStorageSystems.systems:type_name -> bosca.workflow.WorkflowActivityStorageSystem
	22, // 10: bosca.workflow.WorkflowActivityModel.model:type_name -> bosca.workflow.Model
	15, // 11: bosca.workflow.WorkflowActivityModel.configuration:type_name -> bosca.workflow.WorkflowActivityModel.ConfigurationEntry
	16, // 12: bosca.workflow.WorkflowActivity.configuration:type_name -> bosca.workflow.WorkflowActivity.ConfigurationEntry
	17, // 13: bosca.workflow.WorkflowActivity.inputs:type_name -> bosca.workflow.WorkflowActivity.InputsEntry
	18, // 14: bosca.workflow.WorkflowActivity.outputs:type_name -> bosca.workflow.WorkflowActivity.OutputsEntry
	7,  // 15: bosca.workflow.WorkflowActivities.activities:type_name -> bosca.workflow.WorkflowActivity
	0,  // 16: bosca.workflow.Activity.InputsEntry.value:type_name -> bosca.workflow.WorkflowActivityParameterType
	0,  // 17: bosca.workflow.Activity.OutputsEntry.value:type_name -> bosca.workflow.WorkflowActivityParameterType
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_bosca_workflow_activities_proto_init() }
func file_bosca_workflow_activities_proto_init() {
	if File_bosca_workflow_activities_proto != nil {
		return
	}
	file_bosca_workflow_prompts_proto_init()
	file_bosca_workflow_storage_systems_proto_init()
	file_bosca_workflow_models_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_bosca_workflow_activities_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Activity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosca_workflow_activities_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*WorkflowActivityPrompt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosca_workflow_activities_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*WorkflowActivityPrompts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosca_workflow_activities_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*WorkflowActivityStorageSystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosca_workflow_activities_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*WorkflowActivityStorageSystems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosca_workflow_activities_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*WorkflowActivityModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosca_workflow_activities_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*WorkflowActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosca_workflow_activities_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*WorkflowActivities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosca_workflow_activities_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*WorkflowActivityIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bosca_workflow_activities_proto_msgTypes[0].OneofWrappers = []any{}
	file_bosca_workflow_activities_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bosca_workflow_activities_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bosca_workflow_activities_proto_goTypes,
		DependencyIndexes: file_bosca_workflow_activities_proto_depIdxs,
		EnumInfos:         file_bosca_workflow_activities_proto_enumTypes,
		MessageInfos:      file_bosca_workflow_activities_proto_msgTypes,
	}.Build()
	File_bosca_workflow_activities_proto = out.File
	file_bosca_workflow_activities_proto_rawDesc = nil
	file_bosca_workflow_activities_proto_goTypes = nil
	file_bosca_workflow_activities_proto_depIdxs = nil
}
