/*
 * Copyright 2024 Sowers, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto3";

option go_package = "bosca.io/api/protobuf/bosca/content";

import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";

package bosca.content;

message Metadata {
  string default_id = 1;

  string id = 2;
  string name = 3;
  string content_type = 4;

  optional string source_id = 5;
  optional string source_identifier = 6;

  string language_tag = 7;
  optional int64 content_length = 8;

  repeated string trait_ids = 11;
  repeated string category_ids = 12;
  repeated string labels = 13;
  map<string, string> attributes = 14;

  google.protobuf.Timestamp created = 20;
  google.protobuf.Timestamp modified = 21;

  string workflow_state_id = 31;
  optional string workflow_state_pending_id = 32;
  optional string delete_workflow_id = 33;

  int32 version = 40;
  int32 active_version = 41;
  int32 latest_version = 42;
}

message MetadataSupplementaries {
  repeated MetadataSupplementary supplementaries = 1;
}

message MetadataSupplementary {
  string metadata_id = 1;
  string key = 2;
  string name = 3;
  string content_type = 4;
  int64 content_length = 5;
  repeated string trait_ids = 6;
  optional string source_id = 7;
  optional string source_identifier = 8;
}

message AddMetadataRequest {
  optional string collection = 1;
  Metadata metadata = 2;
}

message AddMetadatasRequest {
  repeated AddMetadataRequest metadatas = 1;
}

message Metadatas {
  repeated Metadata metadata = 1;
}

message MetadataRelationshipIdRequest {
  string id = 1;
  optional string relationship = 2;
}

message MetadataRelationship {
  string metadata_id1 = 1;
  string metadata_id2 = 2;
  string relationship = 3;
  map<string, string> attributes = 4;
}

message MetadataRelationships {
  repeated MetadataRelationship relationships = 1;
}

message AddMetadataTraitRequest {
  string metadata_id = 1;
  string trait_id = 2;
}

message SetMetadataTraitsRequest {
  string metadata_id = 1;
  repeated string trait_id = 2;
}

message AddSupplementaryRequest {
  reserved 1;
  string metadata_id = 2;
  string key = 3;
  string name = 4;
  string content_type = 5;
  int64 content_length = 6;
  repeated string trait_ids = 7;
  optional string source_id = 8;
  optional string source_identifier = 9;
}

message FindMetadataRequest {
  map<string, string> attributes = 1;
}
