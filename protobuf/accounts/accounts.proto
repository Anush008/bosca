/*
 * Copyright 2024 Sowers, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto3";

option go_package = "bosca.io/api/protobuf/accounts";

import "google/api/annotations.proto";
import "empty.proto";

package bosca.accounts;

service AccountsService {
  rpc AddAccount (AddAccountRequest) returns (Account) {
    option (google.api.http) = {
      post: "/v1/accounts"
      body: "*"
    };
  }
  rpc GetAccounts (bosca.Empty) returns (Accounts) {
    option (google.api.http) = {
      get: "/v1/accounts"
    };
  }
  rpc GetAccount (GetAccountRequest) returns (Account) {
    option (google.api.http) = {
      get: "/v1/accounts/{provider}/{provider_key}"
    };
  }
}

message AddAccountRequest {
  string provider = 1;
  string provider_key = 2;
  string name = 3;
  repeated AccountFeature features = 4;
  Credential credential = 5;
}

message Accounts {
  repeated Account accounts = 1;
}

message Credential {
  string username = 1;
  string password = 2;
}

enum AccountFeature {
  unknown = 0;
  mail = 1;
}

message GetAccountRequest {
  string provider = 1;
  string provider_key = 2;
}

message Account {
  string provider = 1;
  string provider_key = 2;
  string name = 3;
  repeated AccountFeature features = 4;
  Credential credential = 5;
}