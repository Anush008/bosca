//
// Copyright 2024 Sowers, LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.10.0 with parameter "target=ts,import_extension=none"
// @generated from file bosca/profiles/profiles.proto (package bosca.profiles, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from enum bosca.profiles.ProfileVisibility
 */
export enum ProfileVisibility {
  /**
   * @generated from enum value: system = 0;
   */
  system = 0,

  /**
   * @generated from enum value: user = 1;
   */
  user = 1,

  /**
   * @generated from enum value: friends = 2;
   */
  friends = 2,

  /**
   * @generated from enum value: friends_of_friends = 3;
   */
  friends_of_friends = 3,

  /**
   * @generated from enum value: public = 4;
   */
  public = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(ProfileVisibility)
proto3.util.setEnumType(ProfileVisibility, "bosca.profiles.ProfileVisibility", [
  { no: 0, name: "system" },
  { no: 1, name: "user" },
  { no: 2, name: "friends" },
  { no: 3, name: "friends_of_friends" },
  { no: 4, name: "public" },
]);

/**
 * @generated from message bosca.profiles.ProfileConfiguration
 */
export class ProfileConfiguration extends Message<ProfileConfiguration> {
  /**
   * @generated from field: string avatar_template_url = 1;
   */
  avatarTemplateUrl = "";

  constructor(data?: PartialMessage<ProfileConfiguration>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "bosca.profiles.ProfileConfiguration";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "avatar_template_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProfileConfiguration {
    return new ProfileConfiguration().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProfileConfiguration {
    return new ProfileConfiguration().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProfileConfiguration {
    return new ProfileConfiguration().fromJsonString(jsonString, options);
  }

  static equals(a: ProfileConfiguration | PlainMessage<ProfileConfiguration> | undefined, b: ProfileConfiguration | PlainMessage<ProfileConfiguration> | undefined): boolean {
    return proto3.util.equals(ProfileConfiguration, a, b);
  }
}

/**
 * @generated from message bosca.profiles.Profile
 */
export class Profile extends Message<Profile> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string principal = 2;
   */
  principal = "";

  /**
   * @generated from field: string name = 3;
   */
  name = "";

  /**
   * @generated from field: repeated bosca.profiles.ProfileAttribute attributes = 4;
   */
  attributes: ProfileAttribute[] = [];

  /**
   * @generated from field: bosca.profiles.ProfileVisibility visibility = 5;
   */
  visibility = ProfileVisibility.system;

  /**
   * @generated from field: google.protobuf.Timestamp created = 6;
   */
  created?: Timestamp;

  constructor(data?: PartialMessage<Profile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "bosca.profiles.Profile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "principal", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "attributes", kind: "message", T: ProfileAttribute, repeated: true },
    { no: 5, name: "visibility", kind: "enum", T: proto3.getEnumType(ProfileVisibility) },
    { no: 6, name: "created", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Profile {
    return new Profile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Profile {
    return new Profile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Profile {
    return new Profile().fromJsonString(jsonString, options);
  }

  static equals(a: Profile | PlainMessage<Profile> | undefined, b: Profile | PlainMessage<Profile> | undefined): boolean {
    return proto3.util.equals(Profile, a, b);
  }
}

/**
 * @generated from message bosca.profiles.ProfileAttributeType
 */
export class ProfileAttributeType extends Message<ProfileAttributeType> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string description = 3;
   */
  description = "";

  constructor(data?: PartialMessage<ProfileAttributeType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "bosca.profiles.ProfileAttributeType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProfileAttributeType {
    return new ProfileAttributeType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProfileAttributeType {
    return new ProfileAttributeType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProfileAttributeType {
    return new ProfileAttributeType().fromJsonString(jsonString, options);
  }

  static equals(a: ProfileAttributeType | PlainMessage<ProfileAttributeType> | undefined, b: ProfileAttributeType | PlainMessage<ProfileAttributeType> | undefined): boolean {
    return proto3.util.equals(ProfileAttributeType, a, b);
  }
}

/**
 * @generated from message bosca.profiles.ProfileAttributeTypes
 */
export class ProfileAttributeTypes extends Message<ProfileAttributeTypes> {
  /**
   * @generated from field: repeated bosca.profiles.ProfileAttributeType types = 1;
   */
  types: ProfileAttributeType[] = [];

  constructor(data?: PartialMessage<ProfileAttributeTypes>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "bosca.profiles.ProfileAttributeTypes";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "types", kind: "message", T: ProfileAttributeType, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProfileAttributeTypes {
    return new ProfileAttributeTypes().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProfileAttributeTypes {
    return new ProfileAttributeTypes().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProfileAttributeTypes {
    return new ProfileAttributeTypes().fromJsonString(jsonString, options);
  }

  static equals(a: ProfileAttributeTypes | PlainMessage<ProfileAttributeTypes> | undefined, b: ProfileAttributeTypes | PlainMessage<ProfileAttributeTypes> | undefined): boolean {
    return proto3.util.equals(ProfileAttributeTypes, a, b);
  }
}

/**
 * @generated from message bosca.profiles.ProfileAttribute
 */
export class ProfileAttribute extends Message<ProfileAttribute> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string type_id = 2;
   */
  typeId = "";

  /**
   * @generated from field: bosca.profiles.ProfileVisibility visibility = 4;
   */
  visibility = ProfileVisibility.system;

  /**
   * @generated from field: google.protobuf.Any value = 5;
   */
  value?: Any;

  /**
   * @generated from field: float confidence = 6;
   */
  confidence = 0;

  /**
   * @generated from field: float priority = 7;
   */
  priority = 0;

  /**
   * @generated from field: string source = 8;
   */
  source = "";

  /**
   * @generated from field: google.protobuf.Timestamp created = 9;
   */
  created?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp expiration = 10;
   */
  expiration?: Timestamp;

  constructor(data?: PartialMessage<ProfileAttribute>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "bosca.profiles.ProfileAttribute";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "type_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "visibility", kind: "enum", T: proto3.getEnumType(ProfileVisibility) },
    { no: 5, name: "value", kind: "message", T: Any },
    { no: 6, name: "confidence", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 7, name: "priority", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 8, name: "source", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "created", kind: "message", T: Timestamp },
    { no: 10, name: "expiration", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProfileAttribute {
    return new ProfileAttribute().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProfileAttribute {
    return new ProfileAttribute().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProfileAttribute {
    return new ProfileAttribute().fromJsonString(jsonString, options);
  }

  static equals(a: ProfileAttribute | PlainMessage<ProfileAttribute> | undefined, b: ProfileAttribute | PlainMessage<ProfileAttribute> | undefined): boolean {
    return proto3.util.equals(ProfileAttribute, a, b);
  }
}

