# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from bosca.content import collections_pb2 as bosca_dot_content_dot_collections__pb2
from bosca.content import metadata_pb2 as bosca_dot_content_dot_metadata__pb2
from bosca.content import model_pb2 as bosca_dot_content_dot_model__pb2
from bosca.content import permissions_pb2 as bosca_dot_content_dot_permissions__pb2
from bosca.content import prompts_pb2 as bosca_dot_content_dot_prompts__pb2
from bosca.content import sources_pb2 as bosca_dot_content_dot_sources__pb2
from bosca.content import storage_systems_pb2 as bosca_dot_content_dot_storage__systems__pb2
from bosca.content import traits_pb2 as bosca_dot_content_dot_traits__pb2
from bosca.content import url_pb2 as bosca_dot_content_dot_url__pb2
from bosca.content import workflows_pb2 as bosca_dot_content_dot_workflows__pb2
from bosca import empty_pb2 as bosca_dot_empty__pb2
from bosca import requests_pb2 as bosca_dot_requests__pb2

GRPC_GENERATED_VERSION = '1.64.1'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in bosca/content/content_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class ContentServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetSources = channel.unary_unary(
                '/bosca.content.ContentService/GetSources',
                request_serializer=bosca_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=bosca_dot_content_dot_sources__pb2.Sources.FromString,
                _registered_method=True)
        self.GetSource = channel.unary_unary(
                '/bosca.content.ContentService/GetSource',
                request_serializer=bosca_dot_requests__pb2.IdRequest.SerializeToString,
                response_deserializer=bosca_dot_content_dot_sources__pb2.Source.FromString,
                _registered_method=True)
        self.GetWorkflows = channel.unary_unary(
                '/bosca.content.ContentService/GetWorkflows',
                request_serializer=bosca_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=bosca_dot_content_dot_workflows__pb2.Workflows.FromString,
                _registered_method=True)
        self.GetWorkflow = channel.unary_unary(
                '/bosca.content.ContentService/GetWorkflow',
                request_serializer=bosca_dot_requests__pb2.IdRequest.SerializeToString,
                response_deserializer=bosca_dot_content_dot_workflows__pb2.Workflow.FromString,
                _registered_method=True)
        self.GetModels = channel.unary_unary(
                '/bosca.content.ContentService/GetModels',
                request_serializer=bosca_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=bosca_dot_content_dot_model__pb2.Models.FromString,
                _registered_method=True)
        self.GetPrompts = channel.unary_unary(
                '/bosca.content.ContentService/GetPrompts',
                request_serializer=bosca_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=bosca_dot_content_dot_prompts__pb2.Prompts.FromString,
                _registered_method=True)
        self.GetStorageSystems = channel.unary_unary(
                '/bosca.content.ContentService/GetStorageSystems',
                request_serializer=bosca_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=bosca_dot_content_dot_storage__systems__pb2.StorageSystems.FromString,
                _registered_method=True)
        self.GetStorageSystem = channel.unary_unary(
                '/bosca.content.ContentService/GetStorageSystem',
                request_serializer=bosca_dot_requests__pb2.IdRequest.SerializeToString,
                response_deserializer=bosca_dot_content_dot_storage__systems__pb2.StorageSystem.FromString,
                _registered_method=True)
        self.GetStorageSystemModels = channel.unary_unary(
                '/bosca.content.ContentService/GetStorageSystemModels',
                request_serializer=bosca_dot_requests__pb2.IdRequest.SerializeToString,
                response_deserializer=bosca_dot_content_dot_storage__systems__pb2.StorageSystemModels.FromString,
                _registered_method=True)
        self.GetWorkflowState = channel.unary_unary(
                '/bosca.content.ContentService/GetWorkflowState',
                request_serializer=bosca_dot_requests__pb2.IdRequest.SerializeToString,
                response_deserializer=bosca_dot_content_dot_workflows__pb2.WorkflowState.FromString,
                _registered_method=True)
        self.GetWorkflowStates = channel.unary_unary(
                '/bosca.content.ContentService/GetWorkflowStates',
                request_serializer=bosca_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=bosca_dot_content_dot_workflows__pb2.WorkflowStates.FromString,
                _registered_method=True)
        self.GetTraits = channel.unary_unary(
                '/bosca.content.ContentService/GetTraits',
                request_serializer=bosca_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=bosca_dot_content_dot_traits__pb2.Traits.FromString,
                _registered_method=True)
        self.GetTrait = channel.unary_unary(
                '/bosca.content.ContentService/GetTrait',
                request_serializer=bosca_dot_requests__pb2.IdRequest.SerializeToString,
                response_deserializer=bosca_dot_content_dot_traits__pb2.Trait.FromString,
                _registered_method=True)
        self.GetWorkflowActivityInstances = channel.unary_unary(
                '/bosca.content.ContentService/GetWorkflowActivityInstances',
                request_serializer=bosca_dot_requests__pb2.IdRequest.SerializeToString,
                response_deserializer=bosca_dot_content_dot_workflows__pb2.WorkflowActivityInstances.FromString,
                _registered_method=True)
        self.GetWorkflowActivityStorageSystems = channel.unary_unary(
                '/bosca.content.ContentService/GetWorkflowActivityStorageSystems',
                request_serializer=bosca_dot_content_dot_workflows__pb2.WorkflowActivityIdRequest.SerializeToString,
                response_deserializer=bosca_dot_content_dot_workflows__pb2.WorkflowActivityStorageSystems.FromString,
                _registered_method=True)
        self.GetWorkflowActivityPrompts = channel.unary_unary(
                '/bosca.content.ContentService/GetWorkflowActivityPrompts',
                request_serializer=bosca_dot_content_dot_workflows__pb2.WorkflowActivityIdRequest.SerializeToString,
                response_deserializer=bosca_dot_content_dot_workflows__pb2.WorkflowActivityPrompts.FromString,
                _registered_method=True)
        self.GetRootCollectionItems = channel.unary_unary(
                '/bosca.content.ContentService/GetRootCollectionItems',
                request_serializer=bosca_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=bosca_dot_content_dot_collections__pb2.CollectionItems.FromString,
                _registered_method=True)
        self.GetCollectionItems = channel.unary_unary(
                '/bosca.content.ContentService/GetCollectionItems',
                request_serializer=bosca_dot_requests__pb2.IdRequest.SerializeToString,
                response_deserializer=bosca_dot_content_dot_collections__pb2.CollectionItems.FromString,
                _registered_method=True)
        self.AddCollection = channel.unary_unary(
                '/bosca.content.ContentService/AddCollection',
                request_serializer=bosca_dot_content_dot_collections__pb2.AddCollectionRequest.SerializeToString,
                response_deserializer=bosca_dot_requests__pb2.IdResponse.FromString,
                _registered_method=True)
        self.GetCollection = channel.unary_unary(
                '/bosca.content.ContentService/GetCollection',
                request_serializer=bosca_dot_requests__pb2.IdRequest.SerializeToString,
                response_deserializer=bosca_dot_content_dot_collections__pb2.Collection.FromString,
                _registered_method=True)
        self.DeleteCollection = channel.unary_unary(
                '/bosca.content.ContentService/DeleteCollection',
                request_serializer=bosca_dot_requests__pb2.IdRequest.SerializeToString,
                response_deserializer=bosca_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetCollectionPermissions = channel.unary_unary(
                '/bosca.content.ContentService/GetCollectionPermissions',
                request_serializer=bosca_dot_requests__pb2.IdRequest.SerializeToString,
                response_deserializer=bosca_dot_content_dot_permissions__pb2.Permissions.FromString,
                _registered_method=True)
        self.AddCollectionPermission = channel.unary_unary(
                '/bosca.content.ContentService/AddCollectionPermission',
                request_serializer=bosca_dot_content_dot_permissions__pb2.Permission.SerializeToString,
                response_deserializer=bosca_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.AddCollectionItem = channel.unary_unary(
                '/bosca.content.ContentService/AddCollectionItem',
                request_serializer=bosca_dot_content_dot_collections__pb2.AddCollectionItemRequest.SerializeToString,
                response_deserializer=bosca_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.CheckPermission = channel.unary_unary(
                '/bosca.content.ContentService/CheckPermission',
                request_serializer=bosca_dot_content_dot_permissions__pb2.PermissionCheckRequest.SerializeToString,
                response_deserializer=bosca_dot_content_dot_permissions__pb2.PermissionCheckResponse.FromString,
                _registered_method=True)
        self.GetMetadata = channel.unary_unary(
                '/bosca.content.ContentService/GetMetadata',
                request_serializer=bosca_dot_requests__pb2.IdRequest.SerializeToString,
                response_deserializer=bosca_dot_content_dot_metadata__pb2.Metadata.FromString,
                _registered_method=True)
        self.GetMetadatas = channel.unary_unary(
                '/bosca.content.ContentService/GetMetadatas',
                request_serializer=bosca_dot_requests__pb2.IdsRequest.SerializeToString,
                response_deserializer=bosca_dot_content_dot_metadata__pb2.Metadatas.FromString,
                _registered_method=True)
        self.AddMetadata = channel.unary_unary(
                '/bosca.content.ContentService/AddMetadata',
                request_serializer=bosca_dot_content_dot_metadata__pb2.AddMetadataRequest.SerializeToString,
                response_deserializer=bosca_dot_requests__pb2.IdResponse.FromString,
                _registered_method=True)
        self.AddMetadataTrait = channel.unary_unary(
                '/bosca.content.ContentService/AddMetadataTrait',
                request_serializer=bosca_dot_content_dot_metadata__pb2.AddMetadataTraitRequest.SerializeToString,
                response_deserializer=bosca_dot_content_dot_metadata__pb2.Metadata.FromString,
                _registered_method=True)
        self.DeleteMetadata = channel.unary_unary(
                '/bosca.content.ContentService/DeleteMetadata',
                request_serializer=bosca_dot_requests__pb2.IdRequest.SerializeToString,
                response_deserializer=bosca_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetMetadataUploadUrl = channel.unary_unary(
                '/bosca.content.ContentService/GetMetadataUploadUrl',
                request_serializer=bosca_dot_requests__pb2.IdRequest.SerializeToString,
                response_deserializer=bosca_dot_content_dot_url__pb2.SignedUrl.FromString,
                _registered_method=True)
        self.GetMetadataDownloadUrl = channel.unary_unary(
                '/bosca.content.ContentService/GetMetadataDownloadUrl',
                request_serializer=bosca_dot_requests__pb2.IdRequest.SerializeToString,
                response_deserializer=bosca_dot_content_dot_url__pb2.SignedUrl.FromString,
                _registered_method=True)
        self.AddMetadataSupplementary = channel.unary_unary(
                '/bosca.content.ContentService/AddMetadataSupplementary',
                request_serializer=bosca_dot_content_dot_metadata__pb2.AddSupplementaryRequest.SerializeToString,
                response_deserializer=bosca_dot_content_dot_url__pb2.SignedUrl.FromString,
                _registered_method=True)
        self.GetMetadataSupplementaryDownloadUrl = channel.unary_unary(
                '/bosca.content.ContentService/GetMetadataSupplementaryDownloadUrl',
                request_serializer=bosca_dot_content_dot_metadata__pb2.SupplementaryIdRequest.SerializeToString,
                response_deserializer=bosca_dot_content_dot_url__pb2.SignedUrl.FromString,
                _registered_method=True)
        self.DeleteMetadataSupplementary = channel.unary_unary(
                '/bosca.content.ContentService/DeleteMetadataSupplementary',
                request_serializer=bosca_dot_content_dot_metadata__pb2.SupplementaryIdRequest.SerializeToString,
                response_deserializer=bosca_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.SetMetadataUploaded = channel.unary_unary(
                '/bosca.content.ContentService/SetMetadataUploaded',
                request_serializer=bosca_dot_requests__pb2.IdRequest.SerializeToString,
                response_deserializer=bosca_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetMetadataPermissions = channel.unary_unary(
                '/bosca.content.ContentService/GetMetadataPermissions',
                request_serializer=bosca_dot_requests__pb2.IdRequest.SerializeToString,
                response_deserializer=bosca_dot_content_dot_permissions__pb2.Permissions.FromString,
                _registered_method=True)
        self.AddMetadataPermissions = channel.unary_unary(
                '/bosca.content.ContentService/AddMetadataPermissions',
                request_serializer=bosca_dot_content_dot_permissions__pb2.Permissions.SerializeToString,
                response_deserializer=bosca_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.AddMetadataPermission = channel.unary_unary(
                '/bosca.content.ContentService/AddMetadataPermission',
                request_serializer=bosca_dot_content_dot_permissions__pb2.Permission.SerializeToString,
                response_deserializer=bosca_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.BeginTransitionWorkflow = channel.unary_unary(
                '/bosca.content.ContentService/BeginTransitionWorkflow',
                request_serializer=bosca_dot_content_dot_workflows__pb2.TransitionWorkflowRequest.SerializeToString,
                response_deserializer=bosca_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.CompleteTransitionWorkflow = channel.unary_unary(
                '/bosca.content.ContentService/CompleteTransitionWorkflow',
                request_serializer=bosca_dot_content_dot_workflows__pb2.CompleteTransitionWorkflowRequest.SerializeToString,
                response_deserializer=bosca_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.AddMetadataRelationship = channel.unary_unary(
                '/bosca.content.ContentService/AddMetadataRelationship',
                request_serializer=bosca_dot_content_dot_metadata__pb2.MetadataRelationship.SerializeToString,
                response_deserializer=bosca_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetMetadataRelationships = channel.unary_unary(
                '/bosca.content.ContentService/GetMetadataRelationships',
                request_serializer=bosca_dot_content_dot_metadata__pb2.MetadataRelationshipIdRequest.SerializeToString,
                response_deserializer=bosca_dot_content_dot_metadata__pb2.MetadataRelationships.FromString,
                _registered_method=True)


class ContentServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetSources(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWorkflows(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWorkflow(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetModels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPrompts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStorageSystems(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStorageSystem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStorageSystemModels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWorkflowState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWorkflowStates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTraits(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTrait(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWorkflowActivityInstances(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWorkflowActivityStorageSystems(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWorkflowActivityPrompts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRootCollectionItems(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCollectionItems(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddCollection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCollection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteCollection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCollectionPermissions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddCollectionPermission(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddCollectionItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckPermission(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMetadata(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMetadatas(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddMetadata(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddMetadataTrait(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteMetadata(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMetadataUploadUrl(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMetadataDownloadUrl(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddMetadataSupplementary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMetadataSupplementaryDownloadUrl(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteMetadataSupplementary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetMetadataUploaded(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMetadataPermissions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddMetadataPermissions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddMetadataPermission(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BeginTransitionWorkflow(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CompleteTransitionWorkflow(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddMetadataRelationship(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMetadataRelationships(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ContentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetSources': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSources,
                    request_deserializer=bosca_dot_empty__pb2.Empty.FromString,
                    response_serializer=bosca_dot_content_dot_sources__pb2.Sources.SerializeToString,
            ),
            'GetSource': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSource,
                    request_deserializer=bosca_dot_requests__pb2.IdRequest.FromString,
                    response_serializer=bosca_dot_content_dot_sources__pb2.Source.SerializeToString,
            ),
            'GetWorkflows': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWorkflows,
                    request_deserializer=bosca_dot_empty__pb2.Empty.FromString,
                    response_serializer=bosca_dot_content_dot_workflows__pb2.Workflows.SerializeToString,
            ),
            'GetWorkflow': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWorkflow,
                    request_deserializer=bosca_dot_requests__pb2.IdRequest.FromString,
                    response_serializer=bosca_dot_content_dot_workflows__pb2.Workflow.SerializeToString,
            ),
            'GetModels': grpc.unary_unary_rpc_method_handler(
                    servicer.GetModels,
                    request_deserializer=bosca_dot_empty__pb2.Empty.FromString,
                    response_serializer=bosca_dot_content_dot_model__pb2.Models.SerializeToString,
            ),
            'GetPrompts': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPrompts,
                    request_deserializer=bosca_dot_empty__pb2.Empty.FromString,
                    response_serializer=bosca_dot_content_dot_prompts__pb2.Prompts.SerializeToString,
            ),
            'GetStorageSystems': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStorageSystems,
                    request_deserializer=bosca_dot_empty__pb2.Empty.FromString,
                    response_serializer=bosca_dot_content_dot_storage__systems__pb2.StorageSystems.SerializeToString,
            ),
            'GetStorageSystem': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStorageSystem,
                    request_deserializer=bosca_dot_requests__pb2.IdRequest.FromString,
                    response_serializer=bosca_dot_content_dot_storage__systems__pb2.StorageSystem.SerializeToString,
            ),
            'GetStorageSystemModels': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStorageSystemModels,
                    request_deserializer=bosca_dot_requests__pb2.IdRequest.FromString,
                    response_serializer=bosca_dot_content_dot_storage__systems__pb2.StorageSystemModels.SerializeToString,
            ),
            'GetWorkflowState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWorkflowState,
                    request_deserializer=bosca_dot_requests__pb2.IdRequest.FromString,
                    response_serializer=bosca_dot_content_dot_workflows__pb2.WorkflowState.SerializeToString,
            ),
            'GetWorkflowStates': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWorkflowStates,
                    request_deserializer=bosca_dot_empty__pb2.Empty.FromString,
                    response_serializer=bosca_dot_content_dot_workflows__pb2.WorkflowStates.SerializeToString,
            ),
            'GetTraits': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTraits,
                    request_deserializer=bosca_dot_empty__pb2.Empty.FromString,
                    response_serializer=bosca_dot_content_dot_traits__pb2.Traits.SerializeToString,
            ),
            'GetTrait': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTrait,
                    request_deserializer=bosca_dot_requests__pb2.IdRequest.FromString,
                    response_serializer=bosca_dot_content_dot_traits__pb2.Trait.SerializeToString,
            ),
            'GetWorkflowActivityInstances': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWorkflowActivityInstances,
                    request_deserializer=bosca_dot_requests__pb2.IdRequest.FromString,
                    response_serializer=bosca_dot_content_dot_workflows__pb2.WorkflowActivityInstances.SerializeToString,
            ),
            'GetWorkflowActivityStorageSystems': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWorkflowActivityStorageSystems,
                    request_deserializer=bosca_dot_content_dot_workflows__pb2.WorkflowActivityIdRequest.FromString,
                    response_serializer=bosca_dot_content_dot_workflows__pb2.WorkflowActivityStorageSystems.SerializeToString,
            ),
            'GetWorkflowActivityPrompts': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWorkflowActivityPrompts,
                    request_deserializer=bosca_dot_content_dot_workflows__pb2.WorkflowActivityIdRequest.FromString,
                    response_serializer=bosca_dot_content_dot_workflows__pb2.WorkflowActivityPrompts.SerializeToString,
            ),
            'GetRootCollectionItems': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRootCollectionItems,
                    request_deserializer=bosca_dot_empty__pb2.Empty.FromString,
                    response_serializer=bosca_dot_content_dot_collections__pb2.CollectionItems.SerializeToString,
            ),
            'GetCollectionItems': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCollectionItems,
                    request_deserializer=bosca_dot_requests__pb2.IdRequest.FromString,
                    response_serializer=bosca_dot_content_dot_collections__pb2.CollectionItems.SerializeToString,
            ),
            'AddCollection': grpc.unary_unary_rpc_method_handler(
                    servicer.AddCollection,
                    request_deserializer=bosca_dot_content_dot_collections__pb2.AddCollectionRequest.FromString,
                    response_serializer=bosca_dot_requests__pb2.IdResponse.SerializeToString,
            ),
            'GetCollection': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCollection,
                    request_deserializer=bosca_dot_requests__pb2.IdRequest.FromString,
                    response_serializer=bosca_dot_content_dot_collections__pb2.Collection.SerializeToString,
            ),
            'DeleteCollection': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCollection,
                    request_deserializer=bosca_dot_requests__pb2.IdRequest.FromString,
                    response_serializer=bosca_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetCollectionPermissions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCollectionPermissions,
                    request_deserializer=bosca_dot_requests__pb2.IdRequest.FromString,
                    response_serializer=bosca_dot_content_dot_permissions__pb2.Permissions.SerializeToString,
            ),
            'AddCollectionPermission': grpc.unary_unary_rpc_method_handler(
                    servicer.AddCollectionPermission,
                    request_deserializer=bosca_dot_content_dot_permissions__pb2.Permission.FromString,
                    response_serializer=bosca_dot_empty__pb2.Empty.SerializeToString,
            ),
            'AddCollectionItem': grpc.unary_unary_rpc_method_handler(
                    servicer.AddCollectionItem,
                    request_deserializer=bosca_dot_content_dot_collections__pb2.AddCollectionItemRequest.FromString,
                    response_serializer=bosca_dot_empty__pb2.Empty.SerializeToString,
            ),
            'CheckPermission': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckPermission,
                    request_deserializer=bosca_dot_content_dot_permissions__pb2.PermissionCheckRequest.FromString,
                    response_serializer=bosca_dot_content_dot_permissions__pb2.PermissionCheckResponse.SerializeToString,
            ),
            'GetMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMetadata,
                    request_deserializer=bosca_dot_requests__pb2.IdRequest.FromString,
                    response_serializer=bosca_dot_content_dot_metadata__pb2.Metadata.SerializeToString,
            ),
            'GetMetadatas': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMetadatas,
                    request_deserializer=bosca_dot_requests__pb2.IdsRequest.FromString,
                    response_serializer=bosca_dot_content_dot_metadata__pb2.Metadatas.SerializeToString,
            ),
            'AddMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.AddMetadata,
                    request_deserializer=bosca_dot_content_dot_metadata__pb2.AddMetadataRequest.FromString,
                    response_serializer=bosca_dot_requests__pb2.IdResponse.SerializeToString,
            ),
            'AddMetadataTrait': grpc.unary_unary_rpc_method_handler(
                    servicer.AddMetadataTrait,
                    request_deserializer=bosca_dot_content_dot_metadata__pb2.AddMetadataTraitRequest.FromString,
                    response_serializer=bosca_dot_content_dot_metadata__pb2.Metadata.SerializeToString,
            ),
            'DeleteMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteMetadata,
                    request_deserializer=bosca_dot_requests__pb2.IdRequest.FromString,
                    response_serializer=bosca_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetMetadataUploadUrl': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMetadataUploadUrl,
                    request_deserializer=bosca_dot_requests__pb2.IdRequest.FromString,
                    response_serializer=bosca_dot_content_dot_url__pb2.SignedUrl.SerializeToString,
            ),
            'GetMetadataDownloadUrl': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMetadataDownloadUrl,
                    request_deserializer=bosca_dot_requests__pb2.IdRequest.FromString,
                    response_serializer=bosca_dot_content_dot_url__pb2.SignedUrl.SerializeToString,
            ),
            'AddMetadataSupplementary': grpc.unary_unary_rpc_method_handler(
                    servicer.AddMetadataSupplementary,
                    request_deserializer=bosca_dot_content_dot_metadata__pb2.AddSupplementaryRequest.FromString,
                    response_serializer=bosca_dot_content_dot_url__pb2.SignedUrl.SerializeToString,
            ),
            'GetMetadataSupplementaryDownloadUrl': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMetadataSupplementaryDownloadUrl,
                    request_deserializer=bosca_dot_content_dot_metadata__pb2.SupplementaryIdRequest.FromString,
                    response_serializer=bosca_dot_content_dot_url__pb2.SignedUrl.SerializeToString,
            ),
            'DeleteMetadataSupplementary': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteMetadataSupplementary,
                    request_deserializer=bosca_dot_content_dot_metadata__pb2.SupplementaryIdRequest.FromString,
                    response_serializer=bosca_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SetMetadataUploaded': grpc.unary_unary_rpc_method_handler(
                    servicer.SetMetadataUploaded,
                    request_deserializer=bosca_dot_requests__pb2.IdRequest.FromString,
                    response_serializer=bosca_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetMetadataPermissions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMetadataPermissions,
                    request_deserializer=bosca_dot_requests__pb2.IdRequest.FromString,
                    response_serializer=bosca_dot_content_dot_permissions__pb2.Permissions.SerializeToString,
            ),
            'AddMetadataPermissions': grpc.unary_unary_rpc_method_handler(
                    servicer.AddMetadataPermissions,
                    request_deserializer=bosca_dot_content_dot_permissions__pb2.Permissions.FromString,
                    response_serializer=bosca_dot_empty__pb2.Empty.SerializeToString,
            ),
            'AddMetadataPermission': grpc.unary_unary_rpc_method_handler(
                    servicer.AddMetadataPermission,
                    request_deserializer=bosca_dot_content_dot_permissions__pb2.Permission.FromString,
                    response_serializer=bosca_dot_empty__pb2.Empty.SerializeToString,
            ),
            'BeginTransitionWorkflow': grpc.unary_unary_rpc_method_handler(
                    servicer.BeginTransitionWorkflow,
                    request_deserializer=bosca_dot_content_dot_workflows__pb2.TransitionWorkflowRequest.FromString,
                    response_serializer=bosca_dot_empty__pb2.Empty.SerializeToString,
            ),
            'CompleteTransitionWorkflow': grpc.unary_unary_rpc_method_handler(
                    servicer.CompleteTransitionWorkflow,
                    request_deserializer=bosca_dot_content_dot_workflows__pb2.CompleteTransitionWorkflowRequest.FromString,
                    response_serializer=bosca_dot_empty__pb2.Empty.SerializeToString,
            ),
            'AddMetadataRelationship': grpc.unary_unary_rpc_method_handler(
                    servicer.AddMetadataRelationship,
                    request_deserializer=bosca_dot_content_dot_metadata__pb2.MetadataRelationship.FromString,
                    response_serializer=bosca_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetMetadataRelationships': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMetadataRelationships,
                    request_deserializer=bosca_dot_content_dot_metadata__pb2.MetadataRelationshipIdRequest.FromString,
                    response_serializer=bosca_dot_content_dot_metadata__pb2.MetadataRelationships.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'bosca.content.ContentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('bosca.content.ContentService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ContentService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetSources(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/GetSources',
            bosca_dot_empty__pb2.Empty.SerializeToString,
            bosca_dot_content_dot_sources__pb2.Sources.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/GetSource',
            bosca_dot_requests__pb2.IdRequest.SerializeToString,
            bosca_dot_content_dot_sources__pb2.Source.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetWorkflows(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/GetWorkflows',
            bosca_dot_empty__pb2.Empty.SerializeToString,
            bosca_dot_content_dot_workflows__pb2.Workflows.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetWorkflow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/GetWorkflow',
            bosca_dot_requests__pb2.IdRequest.SerializeToString,
            bosca_dot_content_dot_workflows__pb2.Workflow.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetModels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/GetModels',
            bosca_dot_empty__pb2.Empty.SerializeToString,
            bosca_dot_content_dot_model__pb2.Models.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPrompts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/GetPrompts',
            bosca_dot_empty__pb2.Empty.SerializeToString,
            bosca_dot_content_dot_prompts__pb2.Prompts.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStorageSystems(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/GetStorageSystems',
            bosca_dot_empty__pb2.Empty.SerializeToString,
            bosca_dot_content_dot_storage__systems__pb2.StorageSystems.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStorageSystem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/GetStorageSystem',
            bosca_dot_requests__pb2.IdRequest.SerializeToString,
            bosca_dot_content_dot_storage__systems__pb2.StorageSystem.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStorageSystemModels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/GetStorageSystemModels',
            bosca_dot_requests__pb2.IdRequest.SerializeToString,
            bosca_dot_content_dot_storage__systems__pb2.StorageSystemModels.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetWorkflowState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/GetWorkflowState',
            bosca_dot_requests__pb2.IdRequest.SerializeToString,
            bosca_dot_content_dot_workflows__pb2.WorkflowState.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetWorkflowStates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/GetWorkflowStates',
            bosca_dot_empty__pb2.Empty.SerializeToString,
            bosca_dot_content_dot_workflows__pb2.WorkflowStates.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTraits(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/GetTraits',
            bosca_dot_empty__pb2.Empty.SerializeToString,
            bosca_dot_content_dot_traits__pb2.Traits.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTrait(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/GetTrait',
            bosca_dot_requests__pb2.IdRequest.SerializeToString,
            bosca_dot_content_dot_traits__pb2.Trait.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetWorkflowActivityInstances(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/GetWorkflowActivityInstances',
            bosca_dot_requests__pb2.IdRequest.SerializeToString,
            bosca_dot_content_dot_workflows__pb2.WorkflowActivityInstances.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetWorkflowActivityStorageSystems(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/GetWorkflowActivityStorageSystems',
            bosca_dot_content_dot_workflows__pb2.WorkflowActivityIdRequest.SerializeToString,
            bosca_dot_content_dot_workflows__pb2.WorkflowActivityStorageSystems.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetWorkflowActivityPrompts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/GetWorkflowActivityPrompts',
            bosca_dot_content_dot_workflows__pb2.WorkflowActivityIdRequest.SerializeToString,
            bosca_dot_content_dot_workflows__pb2.WorkflowActivityPrompts.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetRootCollectionItems(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/GetRootCollectionItems',
            bosca_dot_empty__pb2.Empty.SerializeToString,
            bosca_dot_content_dot_collections__pb2.CollectionItems.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCollectionItems(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/GetCollectionItems',
            bosca_dot_requests__pb2.IdRequest.SerializeToString,
            bosca_dot_content_dot_collections__pb2.CollectionItems.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddCollection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/AddCollection',
            bosca_dot_content_dot_collections__pb2.AddCollectionRequest.SerializeToString,
            bosca_dot_requests__pb2.IdResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCollection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/GetCollection',
            bosca_dot_requests__pb2.IdRequest.SerializeToString,
            bosca_dot_content_dot_collections__pb2.Collection.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteCollection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/DeleteCollection',
            bosca_dot_requests__pb2.IdRequest.SerializeToString,
            bosca_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCollectionPermissions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/GetCollectionPermissions',
            bosca_dot_requests__pb2.IdRequest.SerializeToString,
            bosca_dot_content_dot_permissions__pb2.Permissions.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddCollectionPermission(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/AddCollectionPermission',
            bosca_dot_content_dot_permissions__pb2.Permission.SerializeToString,
            bosca_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddCollectionItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/AddCollectionItem',
            bosca_dot_content_dot_collections__pb2.AddCollectionItemRequest.SerializeToString,
            bosca_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CheckPermission(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/CheckPermission',
            bosca_dot_content_dot_permissions__pb2.PermissionCheckRequest.SerializeToString,
            bosca_dot_content_dot_permissions__pb2.PermissionCheckResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/GetMetadata',
            bosca_dot_requests__pb2.IdRequest.SerializeToString,
            bosca_dot_content_dot_metadata__pb2.Metadata.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMetadatas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/GetMetadatas',
            bosca_dot_requests__pb2.IdsRequest.SerializeToString,
            bosca_dot_content_dot_metadata__pb2.Metadatas.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/AddMetadata',
            bosca_dot_content_dot_metadata__pb2.AddMetadataRequest.SerializeToString,
            bosca_dot_requests__pb2.IdResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddMetadataTrait(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/AddMetadataTrait',
            bosca_dot_content_dot_metadata__pb2.AddMetadataTraitRequest.SerializeToString,
            bosca_dot_content_dot_metadata__pb2.Metadata.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/DeleteMetadata',
            bosca_dot_requests__pb2.IdRequest.SerializeToString,
            bosca_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMetadataUploadUrl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/GetMetadataUploadUrl',
            bosca_dot_requests__pb2.IdRequest.SerializeToString,
            bosca_dot_content_dot_url__pb2.SignedUrl.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMetadataDownloadUrl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/GetMetadataDownloadUrl',
            bosca_dot_requests__pb2.IdRequest.SerializeToString,
            bosca_dot_content_dot_url__pb2.SignedUrl.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddMetadataSupplementary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/AddMetadataSupplementary',
            bosca_dot_content_dot_metadata__pb2.AddSupplementaryRequest.SerializeToString,
            bosca_dot_content_dot_url__pb2.SignedUrl.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMetadataSupplementaryDownloadUrl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/GetMetadataSupplementaryDownloadUrl',
            bosca_dot_content_dot_metadata__pb2.SupplementaryIdRequest.SerializeToString,
            bosca_dot_content_dot_url__pb2.SignedUrl.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteMetadataSupplementary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/DeleteMetadataSupplementary',
            bosca_dot_content_dot_metadata__pb2.SupplementaryIdRequest.SerializeToString,
            bosca_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetMetadataUploaded(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/SetMetadataUploaded',
            bosca_dot_requests__pb2.IdRequest.SerializeToString,
            bosca_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMetadataPermissions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/GetMetadataPermissions',
            bosca_dot_requests__pb2.IdRequest.SerializeToString,
            bosca_dot_content_dot_permissions__pb2.Permissions.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddMetadataPermissions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/AddMetadataPermissions',
            bosca_dot_content_dot_permissions__pb2.Permissions.SerializeToString,
            bosca_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddMetadataPermission(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/AddMetadataPermission',
            bosca_dot_content_dot_permissions__pb2.Permission.SerializeToString,
            bosca_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BeginTransitionWorkflow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/BeginTransitionWorkflow',
            bosca_dot_content_dot_workflows__pb2.TransitionWorkflowRequest.SerializeToString,
            bosca_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CompleteTransitionWorkflow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/CompleteTransitionWorkflow',
            bosca_dot_content_dot_workflows__pb2.CompleteTransitionWorkflowRequest.SerializeToString,
            bosca_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddMetadataRelationship(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/AddMetadataRelationship',
            bosca_dot_content_dot_metadata__pb2.MetadataRelationship.SerializeToString,
            bosca_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMetadataRelationships(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bosca.content.ContentService/GetMetadataRelationships',
            bosca_dot_content_dot_metadata__pb2.MetadataRelationshipIdRequest.SerializeToString,
            bosca_dot_content_dot_metadata__pb2.MetadataRelationships.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
